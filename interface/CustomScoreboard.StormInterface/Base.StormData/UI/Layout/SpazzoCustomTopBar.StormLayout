<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Desc>

  
  <Frame type="UnitStatusTalentIcon" name="TalentTreeIconTemplate">
    <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
    <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
    <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
    <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
    <Alpha val="255"/>
    <TooltipFrame val="HeroTalentTooltip" />
    <AcceptsMouse val="{$Talent0MasterSetting/ShowTooltips/CheckBoxButton/@Toggled}"/>
    <AcceptsMouseTooltip val="{$Talent0MasterSetting/ShowTooltips/CheckBoxButton/@Toggled}"/>
    <TooltipAnchorPosition val="BottomLeft" />
    <Frame type="Image" name="IconImage">
      <Anchor side="Top" relative="$parent" pos="Min" offset="-1" />
      <Anchor side="Left" relative="$parent" pos="Min" offset="-1" />
      <Anchor side="Right" relative="$parent" pos="Max" offset="1" />
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="1" />
      <RenderPriority val="250" />
      <Unclipped val="false"/>
      <IgnoreParentColor val="True" />
      <Alpha val="0"/>
      <AcceptsMouse val="False"/>
      <AcceptsMouseTooltip val="False"/>
      <StateGroup name="TextureState">
        <DefaultState val="TierNotAvailable"/>
        <State name="TierSelected">
          <When type="AnimationState" frame="$parent" TalentTierState="TierSelected" />
          <Action type="SetProperty" frame="$this" Alpha="255"/>
          <Action type="SetProperty" frame="$parent/IconBackgroundImage" Visible="false"/>
        </State>
        <State name="TierHidden">
          <When type="AnimationState" frame="$parent" TalentTierState="TierHidden" />
          <Action type="SetProperty" frame="$this" Alpha="0"/>
          <Action type="SetProperty" frame="$parent/IconBackgroundImage" Visible="false"/>
        </State>
        <State name="TierNotAvailable">
          <When type="AnimationState" frame="$parent" TalentTierState="TierNotAvailable" />
          <Action type="SetProperty" frame="$this" Alpha="0"/>
          <Action type="SetProperty" frame="$parent/IconBackgroundImage" Visible="true"/>
        </State>
        <State name="TierAvailable">
          <When type="AnimationState" frame="$parent" TalentTierState="TierAvailable" />
          <Action type="SetProperty" frame="$this" Alpha="0"/>
          <Action type="SetProperty" frame="$parent/IconBackgroundImage" Visible="true"/>
        </State>
      </StateGroup>
    </Frame>
    <Frame type="Image" name="IconBackgroundImage">
      <Anchor side="Top" relative="$parent/IconImage" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/IconImage" pos="Min" offset="0" />
      <Anchor side="Right" relative="$parent/IconImage" pos="Max" offset="0" />
      <Anchor side="Bottom" relative="$parent/IconImage" pos="Max" offset="0" />
      <Texture val="Assets\Textures\storm_ui_ingame_leader_talent_bg.dds"/>
      <Unclipped val="false"/>
      <RenderPriority val="230" />
      <AcceptsMouse val="False"/>
      <AcceptsMouseTooltip val="False"/>
    </Frame>
  </Frame>

  
  <Frame type="UnitStatusBehaviorLabel" name="BehaviorDescriptionTemplate">
    <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
    <Anchor side="Left" relative="$parent" pos="Min" offset="39" />
    <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
    <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
    <Behavior val="Dead" />
    <DurationMinPrecision val="1"/>
    <DurationMaxPrecision val="1"/>
    <AcceptsMouse val="False"/>
    <AcceptsMouseTooltip val="False"/>
    <Unclipped val="false" />
    <Color val="{$parent/$parent/$parent/PlayerColourFrame/@Color}" />
    <StateGroup name="CompactControlGroup">
      <DefaultState val="Default"/>
      <State name="Ultracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="13" />
        <Action type="SetAnchor" frame="$this" side="Left" relative="$parent" pos="Min" offset="20" />
        <Action type="SetProperty" frame="$this/DurationLabel" Style="Spazzo_TopPanelDeathLabel" />
      </State>
      <State name="Compact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
        <Action type="SetAnchor" frame="$this" side="Left" relative="$parent" pos="Min" offset="50" />
        <Action type="SetProperty" frame="$this/DurationLabel" Style="Spazzo_TopPanelDeathLabelCompact" />
      </State>
      <State name="WIIDE">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
        <Action type="SetAnchor" frame="$this" side="Left" relative="$parent" pos="Mid" offset="0" />
        <Action type="SetProperty" frame="$this/DurationLabel" Style="Spazzo_TopPanelDeathLabel" />
      </State>
      <State name="Default">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="2"/>
        <Action type="SetAnchor" frame="$this" side="Left" relative="$parent" pos="Min" offset="39" />
        <Action type="SetProperty" frame="$this/DurationLabel" Style="Spazzo_TopPanelDeathLabel" />
      </State>
    </StateGroup>
    <Frame type="Label" name="DurationLabel">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
      <SubpixelRendering val="True"/>
      <Unclipped val="false" />
      <Style val="Spazzo_TopPanelDeathLabel" />
      <AcceptsMouse val="False"/>
      <AcceptsMouseTooltip val="False"/>
    </Frame>
  </Frame>

  <Frame type="UnitStatusBehaviorAnim" name="BehaviorAnimationTemplate" template="StandardHeroUITemplates/BehaviorAnimTemplate">
    <Behavior val="Dead"/>
    <AcceptsMouse val="False"/>
    <AcceptsMouseTooltip val="False"/>
    <Animation name="Desaturate">
      <Event event="BehaviorCreate" action="Reset, Play"/>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/PlayerHeroLoadingScreenImage" type="Desaturation" end="Pause">
        <Key type="Bool" time="0" value="True" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/WideHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageWIDE" type="Desaturation" end="Pause">
        <Key type="Bool" time="0" value="True" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" type="Desaturation" end="Pause">
        <Key type="Bool" time="0" value="True" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/PlayerHeroLoadingScreenImage" type="Property" property="DesaturationColor" end="Pause">
        <Key type="Property" time="0" value="255,255,255" />
        <Key type="Property" time="0.1" value="240,240,240" />
        <Key type="Property" time="0.2" value="225,225,225" />
        <Key type="Property" time="0.3" value="210,210,210" />
        <Key type="Property" time="0.4" value="195,195,195" />
        <Key type="Property" time="0.5" value="180,180,180" />
        <Key type="Property" time="0.6" value="165,165,165" />
        <Key type="Property" time="0.7" value="150,150,150" />
        <Key type="Property" time="0.8" value="135,135,135" />
        <Key type="Property" time="0.9" value="120,120,120" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/WideHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageWIDE" type="Property" property="DesaturationColor" end="Pause">
        <Key type="Property" time="0" value="255,255,255" />
        <Key type="Property" time="0.1" value="240,240,240" />
        <Key type="Property" time="0.2" value="225,225,225" />
        <Key type="Property" time="0.3" value="210,210,210" />
        <Key type="Property" time="0.4" value="195,195,195" />
        <Key type="Property" time="0.5" value="180,180,180" />
        <Key type="Property" time="0.6" value="165,165,165" />
        <Key type="Property" time="0.7" value="150,150,150" />
        <Key type="Property" time="0.8" value="135,135,135" />
        <Key type="Property" time="0.9" value="120,120,120" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" type="Property" property="DesaturationColor" end="Pause">
        <Key type="Property" time="0" value="255,255,255" />
        <Key type="Property" time="0.1" value="240,240,240" />
        <Key type="Property" time="0.2" value="225,225,225" />
        <Key type="Property" time="0.3" value="210,210,210" />
        <Key type="Property" time="0.4" value="195,195,195" />
        <Key type="Property" time="0.5" value="180,180,180" />
        <Key type="Property" time="0.6" value="165,165,165" />
        <Key type="Property" time="0.7" value="150,150,150" />
        <Key type="Property" time="0.8" value="135,135,135" />
        <Key type="Property" time="0.9" value="120,120,120" />
      </Controller>
      <Controller type="Text" frame="$parent/DeadMonitor" end="Pause">
        <Key type="Text" time="0" text="True"/>
      </Controller>
      <Controller type="Visibility" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/SkullImage" end="Pause">
        <Key type="Bool" time="0" value="True"/>
      </Controller>
      <Controller type="Visibility" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/WideHeroLoadingContainerFrame/SkullImage" end="Pause">
        <Key type="Bool" time="0" value="True"/>
      </Controller>
      <Controller type="Visibility" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/CompactHeroLoadingContainerFrame/SkullImage" end="Pause">
        <Key type="Bool" time="0" value="True"/>
      </Controller>
      <Controller type="Fade" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/SkullImage" end="Pause">
        <Key type="Curve" time="0" value="0" inout="Slow" />
        <Key type="Curve" time="0.45" value="130" inout="Slow" />
        <Key type="Curve" time="0.9" value="255" inout="Slow" />
      </Controller>
      <Controller type="Fade" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/WideHeroLoadingContainerFrame/SkullImage" end="Pause">
        <Key type="Curve" time="0" value="0" inout="Slow" />
        <Key type="Curve" time="0.45" value="130" inout="Slow" />
        <Key type="Curve" time="0.9" value="255" inout="Slow" />
      </Controller>
      <Controller type="Fade" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/CompactHeroLoadingContainerFrame/SkullImage" end="Pause">
        <Key type="Curve" time="0" value="0" inout="Slow" />
        <Key type="Curve" time="0.45" value="130" inout="Slow" />
        <Key type="Curve" time="0.9" value="255" inout="Slow" />
      </Controller>
    </Animation>
    <Animation name="Resaturate">
      <Event event="BehaviorDestroy" action="Reset, Play"/>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/PlayerHeroLoadingScreenImage" type="Desaturation" end="Pause">
        <Key type="Bool" time="0" value="False" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/WideHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageWIDE" type="Desaturation" end="Pause">
        <Key type="Bool" time="0" value="False" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" type="Desaturation" end="Pause">
        <Key type="Bool" time="0" value="False" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/PlayerHeroLoadingScreenImage" type="Property" property="DesaturationColor" end="Pause">
        <Key type="Property" time="0" value="255,255,255" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/WideHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageWIDE" type="Property" property="DesaturationColor" end="Pause">
        <Key type="Property" time="0" value="255,255,255" />
      </Controller>
      <Controller frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" type="Property" property="DesaturationColor" end="Pause">
        <Key type="Property" time="0" value="255,255,255" />
      </Controller>
      <Controller type="Text" frame="$parent/DeadMonitor" end="Pause">
        <Key type="Text" time="0" text="False"/>
      </Controller>
      <Controller type="Visibility" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/SkullImage" end="Pause">
        <Key type="Bool" time="0" value="False"/>
      </Controller>
      <Controller type="Visibility" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/WideHeroLoadingContainerFrame/SkullImage" end="Pause">
        <Key type="Bool" time="0" value="False"/>
      </Controller>
      <Controller type="Visibility" frame="$ancestor[@type=SelectionUnitStatusPanel]/$parent/CompactHeroLoadingContainerFrame/SkullImage" end="Pause">
        <Key type="Bool" time="0" value="False"/>
      </Controller>
    </Animation>
  </Frame>

  
  <Frame type="Frame" name="HealingFountainCooldownTemplate">
    <Visible val="{$Talent0MasterSetting/ShowFountain/CheckBoxButton/@Toggled}"/>
    <CollapseLayout val="True"/>
    <Frame type="Image" name="BorderImage">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
      <Texture val="_Assets\UI\spaz_ui_talentborder_newer.dds"/>
      <RenderPriority val="513"/>
      <IgnoreParentColor val="true" />
      <AcceptsMouse val="False"/>
      <AcceptsMouseTooltip val="False"/>
      <Visible val="{$Talent0MasterSetting/ShowAbilBackings/CheckBoxButton/@Toggled}"/>
    </Frame>
    <Frame type="Image" name="IconBorderImage">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
      <Texture val="_Assets\UI\spaz_ui_healingfountain_avail.dds"/>
      <Unclipped val="False"/>
      <IgnoreParentColor val="true" />
      <AcceptsMouse val="false"/>
      <AcceptsMouseTooltip val="false"/>
      <RenderPriority val="499"/>
    </Frame>
    <Frame type="UnitStatusBehaviorIcon" name="UnitStatusHealingFountain">
      <Anchor relative="$parent" />
      <Behavior val="HealingFountainCooldown" />
      <RenderPriority val="501" />
      <Frame type="BehaviorIcon" name="BehaviorIcon">
        <Anchor relative="$parent/$parent/IconBorderImage" />
        <AcceptsMouse val="false"/>
        <AcceptsMouseTooltip val="false"/>
        <Frame type="Image" name="HealingWellInactiveImage">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
          <Texture val="_Assets\UI\spaz_ui_healingfountain_notavail.dds" />
        </Frame>
        <Frame type="Label" name="CooldownLabel">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
          <RenderPriority val="513" />
          <Text val="000" />
          <Style val="Spazzo_HealingFountainLabel" />
        </Frame>
      </Frame>
    </Frame>
  </Frame>
  
  <Frame type="Frame" name="PlayerCustomTalentTreeReferenceFrame">
    <Anchor side="Top" relative="$parent" pos="Min" offset="-115"/>
    <Anchor side="Bottom" relative="$this" pos="Min" offset="115"/>
    <AcceptsMouse val="False"/>
    <AcceptsMouseTooltip val="False"/>
    <!-- <Height val="300"/> -->
    <!-- <Width val="250"/> -->
    <!-- <Frame type="Image" name="ImageBoundCheck">
      <Anchor relative="$parent" />
      <Texture val="Assets\Textures\storm_ui_homescreenbackground_nexomania.dds"/>
      <RenderPriority val="999" />
      <Alpha val="20"/>
    </Frame> -->
    <Frame type="Frame" name="HeroBG">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      <RenderPriority val="69"/>
      <Visible val="False"/>
      <Alpha val="0"/>
      <Width val="150"/>
      <Frame type="Image" name="HeroBG">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
        <Texture val="_Assets\UI\hero_bg.dds" />
        <Color val="{$parent/$parent/PlayerColourFrame/@Color}"/>
        <RenderPriority val="69"/>
        <Visible val="True"/>
        <Alpha val="{$TopBarSettingsFrame/TeamColourSlider/@Value}"/>
      </Frame>
      <Frame type="Image" name="HeroBGBorder">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
        <Texture val="_Assets\UI\hero_border_bluropac.dds" />
        <Color val="{$parent/$parent/PlayerColourFrame/@Color}"/>
        <RenderPriority val="70"/>
        <Alpha val="{$TopBarSettingsFrame/TeamColourBorderSlider/@Value}"/>
      </Frame>
    </Frame>
    <Frame type="PlayerNameFrame" name="PlayerNameFrame">
      <PlayerId val="{$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
      <Frame type="Label" name="PlayerNameLabel">
       <Visible val="false"/>
      </Frame>
    </Frame>
    <Frame type="PlayerHeroNameFrame" name="PlayerHeroNameFrameTemplate">
      <Anchor side="Top" relative="$parent" pos="Min" offset="-65"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="115"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      <Width val="230" />
      <Height val="22" />
      <PlayerId val="1" />
      <AcceptsMouseTooltip val="false" />
      <AcceptsMouse val="false" />
      <Frame type="Label" name="HeroNameLabel">
        <Anchor relative="$parent" />
        <Style val="Storm_LeaderHeroNameModified" />
        <IgnoreParentColor val="true" />
        <RenderPriority val="#RenderPriorityLevel_2" />
        <Options val="Ellipsis | TooltipIfTruncated" />
        <AcceptsMouseTooltip val="false" />
        <AcceptsMouse val="false" />
        <Visible val="false"/>
      </Frame>
    </Frame>
    <Frame type="PlayerHeroIconFrame" name="PlayerHeroIconFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      <!-- <Width val="100"/>
      <Height val="56"/> -->
      <Width val="117"/>
      <!-- <Height val="66"/> -->
      <PlayerId val="{$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
      <AcceptsMouseTooltip val="false" />
      <AcceptsMouse val="false" />
      <HeroImageType val="LoadingScreen" />
      <Frame type="Image" name="HeroIconImage">
        <Anchor side="Top" relative="$parent" pos="Min" offset="-1" />
        <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
        <Width val="117"/>
        <Height val="66"/>
        <AcceptsMouseTooltip val="false" />
        <AcceptsMouse val="false" />
        <IgnoreParentColor val="true" />
        <HeroImageType val="LoadingScreen" />
        <StateGroup name="HeroState">
          <DefaultState val="NotCustomHero"/>
          <State name="NotCustomHero">
            <When type="Property" frame="$this" Text="" />
          </State>
          <State name="Abathur">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_abathur.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_abathur.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_abathur.dds" />
            <Action type="SetProperty" frame="$parent/$parent/SelectionUnitStatusPanel" AlwaysShowHero="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Alarak">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_alarak.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_alarak.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_alarak.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Alexstrasza">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_alexstrasza.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_alexstrasza.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_alexstrasza.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Ana">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_ana.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_ana.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_ana.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Anduin">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_anduin.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_anduin.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_anduin.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-6" />
          </State>
          <State name="Anubarak">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_anubarak.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_anubarak.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_anubarak.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Artanis">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_artanis.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_artanis.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_artanis.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Arthas">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_arthas.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_arthas.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_arthas.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Auriel">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_auriel.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_auriel.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_auriel.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="Azmodan">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_azmodan.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_azmodan.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_azmodan.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Deathwing">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_deathwing.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_deathwing.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-6" />
          </State>
          <State name="Firebat">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_firebat.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_hero_loading_screen_firebat.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_firebat.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="FaerieDragon">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_faeriedragon.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_faeriedragon.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_faeriedragon.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Butcher">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_butcher.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_butcher.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_butcher.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Amazon">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_d2amazonf.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_d2amazonf.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_amazon.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Chen">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_chen.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_chen.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_chen.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <!-- How do we want to handle these? -->
            <!-- <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame" Visible="True" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame/StormHealthBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame/EarthHealthBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame/FireHealthBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" /> -->
          </State>
          <State name="Cho">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_cho.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_cho.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_cho.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Gall">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_gall.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_gall.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_gall.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Chromie">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_chromie.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_chromie.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_chromie.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetProperty" frame="$parent/$parent/TalentNumberContainers/T1Label" Text="1" />
            <Action type="SetProperty" frame="$parent/$parent/TalentNumberContainers/T2Label" Text="2" />
            <Action type="SetProperty" frame="$parent/$parent/TalentNumberContainers/T3Label" Text="5" />
            <Action type="SetProperty" frame="$parent/$parent/TalentNumberContainers/T4Label" Text="8" />
            <Action type="SetProperty" frame="$parent/$parent/TalentNumberContainers/T5Label" Text="11" />
            <Action type="SetProperty" frame="$parent/$parent/TalentNumberContainers/T6Label" Text="14" />
            <Action type="SetProperty" frame="$parent/$parent/TalentNumberContainers/T7Label" Text="18" />
          </State>
          <State name="Dehaka">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_dehaka.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_dehaka.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_dehaka.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Deckard">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deckard.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_deckard.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_deckard.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="DVa">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_dva.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/SelectionUnitStatusPanel" AlwaysShowHero="False" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_dva.dds" />
            <!-- <Action type="SetProperty" frame="$parent/$parent/SelectionUnitStatusPanel" SpecificUnit="HeroDVaMech" />
            <Action type="SetProperty" frame="$parent/$parent/SelectionUnitStatusPanel" SpecificUnit="HeroDVaPilot" /> -->
            <!-- <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame" SpecificUnit="HeroDVaMech" />
            <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame" SpecificUnit="HeroDVaPilot" />
            <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame" HeroesOnly="False" />
            <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame" AlwaysShowHero="True" /> -->
            <!-- attempts to fix the last player slot dva bug, if SelectionUnitStatusPanelTalentsFrame is set to AlwaysShowHero it works, but then doesn't work if she gets in a vehicle, even if CheckPassengers is set to true. -->
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Diablo">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_diablo.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_diablo.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_diablo.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="L90ETC">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_etc.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_l90etc.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_l90etc.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Falstad">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_falstad.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_falstad.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_falstad.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Fenix">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_fenix.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_fenix.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_fenix.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="Garrosh">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_garrosh.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_garrosh.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_garrosh.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Tinker">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_gazlowe.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_tinker.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_tinker.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Genji">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_genji.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_genji.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_genji.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Greymane">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_genngreymane.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_greymane.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_greymane.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Guldan">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_guldan.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_guldan.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_guldan.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="Hanzo">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_hanzo.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_hanzo.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_hanzo.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Hogger">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_hogger.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_hogger.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_hogger.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-3" />
          </State>
          <State name="Illidan">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_illidan.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_illidan.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_illidan.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Imperius">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_imperius.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_imperius.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_imperius.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Jaina">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_jaina.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_jaina.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_jaina.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Crusader">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_johanna.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_crusader.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_johanna.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Junkrat">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_junkrat.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_junkrat.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_junkrat.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Kaelthas">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_kaelthas.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_kaelthas.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_kaelthas.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="KelThuzad">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_kelthuzad.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_kelthuzad.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_kelthuzad.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="Kerrigan">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_kerrigan.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_kerrigan.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_kerrigan.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Monk">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_monk.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_monk.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_monk.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Leoric">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_leoric.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_leoric.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_leoric.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="LiLi">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lili.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_lili.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_lili.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Wizard">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_wizard.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_wizard.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_wizard.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="LostVikings">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/SelectionUnitStatusPanel" AlwaysShowHero="False" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_lostvikings.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_lostvikings.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame" Visible="True" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame/OlafHealthBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame/BaleogHealthBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame/ErikHealthBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <!-- <Action type="SetAnchor" frame="$parent/$parent/PlayerHeroLoadingScreenImage" side="Left" relative="$parent" pos="Min" offset="-47" /> -->
            <!-- <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" ImageMaskTexture="_Assets/UI/spaz_ui_loadingscreenalphamask_stand_vikings.dds" /> -->
          </State>
          <State name="Lucio">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lucio.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_lucio.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_lucio.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-8" />
          </State>
          <State name="Medic">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_medic.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_medic.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_medic.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Dryad">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lunara.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_dryad.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_dryad.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Maiev">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_maiev.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_maiev.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_maiev.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="Malfurion">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_malfurion.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_malfurion.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_malfurion.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="MalGanis">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_malganis.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_malganis.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_malganis.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-7" />
          </State>
          <State name="Malthael">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_malthael.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_malthael.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_malthael.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Medivh">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_medivh.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_medivh.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_medivh.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Mei">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_meiow.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_meiow.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_mei.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-7" />
          </State>
          <State name="Mephisto">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_mephisto.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_mephisto.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_mephisto.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Muradin">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_muradin.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_muradin.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_muradin.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Murky">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_murky.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_murky.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_murky.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="WitchDoctor">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_witchdoctor.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_witchdoctor.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_witchdoctor.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Nova">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_nova.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_nova.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_nova.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Orphea">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_orphea.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_orphea.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_orphea.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Probius">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_probius.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_probius.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_probius.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="NexusHunter">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_nexus2.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_nexus2.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_nexushunter.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="Ragnaros">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_ragnaros.dds"/>
             <Action type="SetProperty" frame="$parent/$parent/SelectionUnitStatusPanel" AlwaysShowHero="False" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_ragnaros.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_ragnaros.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="Raynor">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_raynor.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_raynor.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_raynor.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Rehgar">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_rehgar.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_rehgar.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_rehgar.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Rexxar">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_rexxar.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_rexxar.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_rexxar.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame" Visible="False" />
            <Action type="SetProperty" frame="$parent/$parent/HeroSpecificOverrideTemplaterFrame/MishaPanel" Visible="False" />
          </State>
          <State name="Samuro">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_samuro.dds"/>
            <!-- <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_samuro.dds" /> -->
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_samuro.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
          <State name="SgtHammer">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_sgthammer.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_sgthammer.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_sgthammer.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Barbarian">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_femalebarbarian.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_barbarian.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_barbarian.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Stitches">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_stitches.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_stitches.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_stitches.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Stukov">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_stukov.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_stukov.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_stukov.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Sylvanas">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_sylvanas.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_sylvanas.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_sylvanas.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Tassadar">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tassadar.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_tassadar.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_tassadar.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Thrall">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_thrall.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_thrall.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_thrall.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Tracer">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tracer.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_tracer.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_tracer.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Tychus">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tychus.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_tychus.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_tychus.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Tyrael">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tyrael.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_tyrael.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_tyrael.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Tyrande">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tyrande.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_tyrande.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_tyrande.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Uther">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_uther.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_uther.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_uther.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Valeera">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_valeera.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_valeera.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_valeera.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-5" />
          </State>
          <State name="DemonHunter">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_demonhunter.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_demonhunter.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_demonhunter.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Varian">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_varian.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_varian.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_varian.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Whitemane">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_whitemane.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_whitemane.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_whitemane.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Necromancer">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_necromancer.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_necromancer.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_necromancer.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Yrel">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_yrel.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_yrel.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_yrel.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Zagara">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_zagara.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_zagara.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_zagara.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Zarya">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_zarya.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_zarya.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_zarya.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-3" />
          </State>
          <State name="Zeratul">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_zeratul.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_zeratul.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_zeratul.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Zuljin">
            <When type="Property" frame="$this" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_zuljin.dds"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_zuljin.dds" />
            <Action type="SetProperty" frame="$parent/$parent/PlayerIconRef" Texture="Assets/Textures/storm_ui_glues_draft_portrait_zuljin.dds" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
            <Action type="SetAnchor" frame="$parent/$parent/CompactHeroLoadingContainerFrame/PlayerHeroLoadingScreenImageCompact" side="Top" relative="$parent" pos="Min" offset="-4" />
          </State>
        </StateGroup>
      </Frame>
    </Frame>
    <Frame type="Image" name="HeroBackgroundImage">
      <Anchor side="Top" relative="$parent" pos="Min" offset="1"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="-44"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="69"/>
      <!-- <Width val="340 55%"/>
      <Height val="124 55%"/> -->
      <Width val="190"/>
      <Visible val="False"/>
      <Texture val="_Assets/UI/spaz_ui_TopPanelHeroBackground.dds"/>
      <AcceptsMouseTooltip val="False" />
      <AcceptsMouse val="False" />
      <ImageMaskTexture val="_Assets/UI/spaz_ui_loadingscreenalphamask_stand.dds" />
      <RenderPriority val="99"/>
    </Frame>
    <Frame type="Frame" name="WideBackgroundContainerFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="1"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="6"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="64"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="-3"/>
      <RenderPriority val="99"/>
      <Frame type="Image" name="HeroBackgroundImageWIDE">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Bottom" relative="$this" pos="Min" offset="70"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <!-- <Width val="340 55%"/>
        <Height val="124 55%"/> -->
        <Width val="190"/>
        <Visible val="False"/>
        <Texture val="_Assets/UI/spaz_ui_TopPanelHeroBackground.dds"/>
        <AcceptsMouseTooltip val="False" />
        <AcceptsMouse val="False" />
        <RenderPriority val="99"/>
        <!-- <ImageMaskTexture val="_Assets/UI/spaz_ui_loadingscreenalphamask_wide_numb.dds" /> -->
      </Frame>
    </Frame>
    <Frame type="Frame" name="CompactBackgroundContainerFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="1"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="4"/>
      <!-- <Anchor side="Bottom" relative="$this" pos="Min" offset="64"/> -->
      <Anchor side="Bottom" relative="$this" pos="Min" offset="43"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="-3"/>
      <RenderPriority val="99"/>
      <Frame type="Image" name="HeroBackgroundImageCompact">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Bottom" relative="$this" pos="Min" offset="70"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <!-- <Width val="340 55%"/>
        <Height val="124 55%"/> -->
        <Width val="190"/>
        <Visible val="False"/>
        <Texture val="_Assets/UI/spaz_ui_TopPanelHeroBackground.dds"/>
        <AcceptsMouseTooltip val="False" />
        <AcceptsMouse val="False" />
        <RenderPriority val="99"/>
        <!-- <ImageMaskTexture val="_Assets/UI/spaz_ui_loadingscreenalphamask_wide_numb.dds" /> -->
      </Frame>
    </Frame>
    <Frame type="Image" name="PlayerHeroLoadingScreenImage">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="-44"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="70"/>
      <Visible val="{$parent/HeroBackgroundImage/@Visible}"/>
      <Width val="190"/>
      <Texture val="Assets/Textures/storm_ui_ingame_hero_loadingscreen_zuljin.dds"/>
      <AcceptsMouseTooltip val="False" />
      <AcceptsMouse val="False" />
      <ImageMaskTexture val="_Assets/UI/spaz_ui_loadingscreenalphamask_stand.dds" />
      <RenderPriority val="100"/>
    </Frame>
    <Frame type="Image" name="PlayerIconRef">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="-44"/>
      <Visible val="false"/>
      <Texture val="Assets/Textures/storm_ui_loading_nexusicon.dds"/>
      <AcceptsMouseTooltip val="False" />
      <AcceptsMouse val="False" />
    </Frame>
    <Frame type="Frame" name="WideHeroLoadingContainerFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="6"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="64"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="-3"/>
      <RenderPriority val="100"/>
      <Visible val="{$parent/WideBackgroundContainerFrame/HeroBackgroundImageWIDE/@Visible}"/>
      <Frame type="Image" name="PlayerHeroLoadingScreenImageWIDE">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Bottom" relative="$this" pos="Min" offset="70"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Texture val="{$parent/$parent/PlayerHeroLoadingScreenImage/@Texture}"/>
        <Width val="190"/>
        <AcceptsMouseTooltip val="False" />
        <AcceptsMouse val="False" />
        <RenderPriority val="100"/>
        <!-- <ImageMaskTexture val="_Assets/UI/spaz_ui_loadingscreenalphamask_wide_numb.dds" /> -->
      </Frame>
      <Frame type="Image" name="SkullImage">
        <Anchor side="Top" relative="$parent/PlayerHeroLoadingScreenImageWIDE" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/PlayerHeroLoadingScreenImageWIDE" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/PlayerHeroLoadingScreenImageWIDE" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/PlayerHeroLoadingScreenImageWIDE" pos="Max" offset="0"/>
        <Visible val="False"/>
        <Texture val="_Assets\UI\spaz_ui_deathborderwide.dds" />
        <ImageMaskTexture val="{$parent/PlayerHeroLoadingScreenImageWIDE/@Texture}" />
        <RenderPriority val="110"/>
      </Frame>
    </Frame>
    <Frame type="Frame" name="CompactHeroLoadingContainerFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="4"/>
      <!-- <Anchor side="Bottom" relative="$this" pos="Min" offset="64"/> -->
      <Anchor side="Bottom" relative="$this" pos="Min" offset="44"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="-3"/>
      <RenderPriority val="100"/>
      <Visible val="{$parent/CompactBackgroundContainerFrame/HeroBackgroundImageCompact/@Visible}"/>
      <Frame type="Image" name="PlayerHeroLoadingScreenImageCompact">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Bottom" relative="$this" pos="Min" offset="70"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Texture val="{$parent/$parent/PlayerHeroLoadingScreenImage/@Texture}"/>
        <Width val="190"/>
        <AcceptsMouseTooltip val="False" />
        <AcceptsMouse val="False" />
        <RenderPriority val="100"/>
        <!-- <ImageMaskTexture val="_Assets/UI/spaz_ui_loadingscreenalphamask_wide_numb.dds" /> -->
      </Frame>
      <Frame type="Image" name="SkullImage">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/PlayerHeroLoadingScreenImageCompact" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/PlayerHeroLoadingScreenImageCompact" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$this" pos="Min" offset="70"/>
        <Visible val="False"/>
        <Texture val="_Assets\UI\spaz_ui_deathborderwide.dds" />
        <ImageMaskTexture val="{$parent/PlayerHeroLoadingScreenImageCompact/@Texture}" />
        <RenderPriority val="110"/>
      </Frame>
    </Frame>
    <Frame type="Image" name="SkullImage">
      <Anchor side="Top" relative="$parent/PlayerHeroLoadingScreenImage" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent/PlayerHeroLoadingScreenImage" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent/PlayerHeroLoadingScreenImage" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent/PlayerHeroLoadingScreenImage" pos="Max" offset="0"/>
      <Width val="190"/>
      <Height val="69"/>
      <Visible val="False"/>
      <Texture val="_Assets\UI\spaz_ui_deathborder.dds" />
      <ImageMaskTexture val="{$parent/PlayerHeroLoadingScreenImage/@Texture}" />
      <AlphaMaskTexture val="_Assets/UI/spaz_ui_loadingscreenalphamask_stand.dds" />
      <RenderPriority val="110"/>
      <StateGroup name="HeroicIngressStateGroup">
        <DefaultState val="Disabled"/>
        <State name="WIIDE">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent" pos="Min" offset="0" />
        </State>
        <State name="notWIIDE">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="3"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/PlayerHeroLoadingScreenImage" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/PlayerHeroLoadingScreenImage" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/PlayerHeroLoadingScreenImage" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/PlayerHeroLoadingScreenImage" pos="Max" offset="0" />
        </State>
      </StateGroup>
    </Frame>
    <!-- <Anchor side="Top" relative="$parent" pos="Min" offset="0"/> -->
    <!-- <Anchor side="Left" relative="$parent" pos="Min" offset="0"/> -->
    <!-- <Anchor side="Right" relative="$parent" pos="Max" offset="0"/> -->
    <!-- <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/> -->
    <StateGroup name="Talent1VisibilityControlFrame">
      <DefaultState val="NeverVisible"/>
      <State name="NeverVisible">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="0"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="N1" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" Visible="False" />
      </State>
      <State name="Ultracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="UTCP1" />
      </State>
      <State name="AlwaysVisible">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="AL1" />
      </State>
      <State name="IfAvailable">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="If1" />
      </State>
      <State name="IfChosen">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="T1" />
      </State>
      <State name="IfActive">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T1TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="A1" />
      </State>
      <State name="IfQuestOrBuff">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT1/StateControllerFrame" operator="NotEqual" T1TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="QB1" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT1/StateControllerFrame" operator="NotEqual" T1TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="QBA1Q" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T1TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="QBA1A" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActive">
        <When type="StateGroup" frame="$Talent1MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT1/StateControllerFrame" operator="NotEqual" T1TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T1TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon1" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T1AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T1Label" Text="QBA1AQ" />
      </State>
    </StateGroup>
    <StateGroup name="Talent2VisibilityControlFrame">
      <State name="UltracompactStandardHeroic">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="UTCP2" />
      </State>
      <!-- <State name="UltracompactVarianHeroic">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="0"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="UTCPV2" />
      </State> -->
      <State name="AlwaysVisible">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="AL2" />
      </State>
      <State name="IfAvailable">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="If2" />
      </State>
      <State name="IfChosen">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="T2" />
      </State>
      <State name="IfActive">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="A2" />
      </State>
      <State name="IfQuestOrBuff">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QB2" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QBA2Q" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QBA2A" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActive">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QBA2AQ" />
      </State>
      <State name="AlwaysVisibleVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="AL2H" />
      </State>
      <State name="IfAvailableVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="If2H" />
      </State>
      <State name="IfChosenVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="T2H" />
      </State>
      <State name="IfActiveVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="A2H" />
      </State>
      <State name="IfQuestOrBuffVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QB2H" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QBA2QH" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActiveVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QBA2AH" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActiveVarian">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="QBA2AQH" />
      </State>
      <State name="NeverVisible">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown" operator="Equal" SelectedValue="0"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="N2" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" Visible="False" />
      </State>
      <State name="NeverVisibleIfHeroic">
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="0"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="N2H" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" Visible="False" />
      </State>
      <State name="NeverVisibleFallback">
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="N2FB" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" Visible="False" />
      </State>
      <State name="NeverVisibleIfHeroicFallback">
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T2Label" Text="N2FBH" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2" Visible="False" />
      </State>
    </StateGroup>
    <StateGroup name="Talent3VisibilityControlFrame">
      <State name="NeverVisibleUltracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="UTCP3" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" Visible="False" />
      </State>
      <State name="AlwaysVisible">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="AL3" />
      </State>
      <State name="IfAvailable">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="If3" />
      </State>
      <State name="IfChosen">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="T3" />
      </State>
      <State name="IfActive">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="A3" />
      </State>
      <State name="IfQuestOrBuff">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT3/StateControllerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QB3" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT3/StateControllerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QBA3A" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QBA3Q" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActive">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT3/StateControllerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QBA3AQ" />
      </State>
      <State name="AlwaysVisibleVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="AL3H" />
      </State>
      <State name="IfAvailableVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="If3H" />
      </State>
      <State name="IfChosenVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="T3H" />
      </State>
      <State name="IfActiveVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="A3H" />
      </State>
      <State name="IfQuestOrBuffVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QB3H" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT3/StateControllerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QB3QH" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActiveVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QB3AH" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActiveVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT3/StateControllerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T3TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T2AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="QB3QAH" />
      </State>
      <State name="NeverVisible">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="0"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="N3" />
      </State>
      <State name="NeverVisibleVarian">
        <When type="StateGroup" frame="$Talent3MasterSetting/TogglePulldown" operator="Equal" SelectedValue="0"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="N3H" />
      </State>
      <State name="NeverVisibleFallback">
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="N3FB" />
      </State>
      <State name="NeverVisibleVarianFallback">
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon3" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T3Label" Text="N3HFB" />
      </State>
    </StateGroup>
    <StateGroup name="Talent4VisibilityControlFrame">
      <State name="UltracompactVarianOverride">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="N4HUTCP" />
      </State>
      <State name="EnabledDeathwingHeroicAvailable">
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierAvailable"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="DTH4_1" />
      </State>
      <State name="EnabledDeathwingNoHeroic">
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="DTH4_2" />
      </State>
      <State name="EnabledDeathwingCataclysmEnabledAndNotSelected">
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_icon_deathwing_cataclysm.dds"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="DTH4_3" />
      </State>
      <State name="EnabledTracerPulsebombEnabled">
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tracer.dds"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="TRC4" />
      </State>
      <State name="AlwaysVisible">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="AL4" />
      </State>
      <State name="IfAvailable">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="If4" />
      </State>
      <State name="IfChosen">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="T4" />
      </State>
      <State name="IfActive">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="A4" />
      </State>
      <State name="IfQuestOrBuff">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QB4" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QBA4Q" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QBA4A" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActive">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QBA4AQ" />
      </State>
      <State name="AlwaysVisibleIfVarian">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="AL4H" />
      </State>
      <State name="IfAvailableIfVarian">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="If4H" />
      </State>
      <State name="IfChosenIfVarian">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="T4H" />
      </State>
      <State name="IfActiveVarianIfHeroic">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="A4H" />
      </State>
      <State name="IfQuestOrBuffVarianIfHeroic">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QB4H" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffVarianIfHeroic">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QBA4QH" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActiveVarianIfHeroic">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QBA4AH" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActiveVarianIfHeroic">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T3AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="QBA4AQH" />
      </State>
      <State name="NeverVisible">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="0"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="N4" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" Visible="False" />
      </State>
      <State name="NeverVisibleIfHeroic">
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="0"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="N4H" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" Visible="False" />
      </State>
      <State name="NeverVisibleFallback">
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="N4FB" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" Visible="False" />
      </State>
      <State name="NeverVisibleIfHeroicFallback">
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T4Label" Text="N4HFB" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4" Visible="False" />
      </State>
    </StateGroup>
    <StateGroup name="Talent5VisibilityControlFrame">
      <DefaultState val="NeverVisible"/>
      <State name="NeverVisible">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="0"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="N5" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" Visible="False" />
      </State>
      <State name="Ultracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="UTCP5" />
      </State>
      <State name="AlwaysVisible">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="AL5" />
      </State>
      <State name="IfAvailable">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="If5" />
      </State>
      <State name="IfChosen">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="T5" />
      </State>
      <State name="IfActive">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T5TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="A5" />
      </State>
      <State name="IfQuestOrBuff">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT5/StateControllerFrame" operator="NotEqual" T5TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="QB5" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT5/StateControllerFrame" operator="NotEqual" T5TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="QBA5Q" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T5TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="QBA5A" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActive">
        <When type="StateGroup" frame="$Talent5MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT5/StateControllerFrame" operator="NotEqual" T5TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T5TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon5" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T5Label" Text="QBA5AQ" />
      </State>
    </StateGroup>
    <StateGroup name="Talent6VisibilityControlFrame">
      <DefaultState val="NeverVisible"/>
      <State name="NeverVisible">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="0"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="N6" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" Visible="False" />
      </State>
      <State name="Ultracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="UTCP6" />
      </State>
      <State name="AlwaysVisible">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="AL6" />
      </State>
      <State name="IfAvailable">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="If6" />
      </State>
      <State name="IfChosen">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="T6" />
      </State>
      <State name="IfActive">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T6TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="A6" />
      </State>
      <State name="IfQuestOrBuff">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT6/StateControllerFrame" operator="NotEqual" T6TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="QB6" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT6/StateControllerFrame" operator="NotEqual" T6TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="QBA6Q" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T6TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="QBA6A" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActive">
        <When type="StateGroup" frame="$Talent6MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT6/StateControllerFrame" operator="NotEqual" T6TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T6TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon6" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T6AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T6Label" Text="QBA6AQ" />
      </State>
    </StateGroup>
    <StateGroup name="Talent7VisibilityControlFrame">
      <DefaultState val="NeverVisible"/>
      <State name="NeverVisible">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="0"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="N7" />
        <Action type="SetProperty" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" Visible="False" />
      </State>
      <State name="Ultracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$parent" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$parent" pos="Min" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="OutOfUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="UTCP7" />
      </State>
      <State name="AlwaysVisible">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="1"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="AL7" />
      </State>
      <State name="IfAvailable">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="If7" />
      </State>
      <State name="IfChosen">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="3"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="T7" />
      </State>
      <State name="IfActive">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T7TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="A7" />
      </State>
      <State name="IfQuestOrBuff">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="5"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT7/StateControllerFrame" operator="NotEqual" T7TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="QB7" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT7/StateControllerFrame" operator="NotEqual" T7TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="QBA7Q" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T7TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="QBA7A" />
      </State>
      <State name="IfQuestOrBuffOrActiveIsQuestOrBuffAndActive">
        <When type="StateGroup" frame="$Talent7MasterSetting/TogglePulldown" operator="Equal" SelectedValue="6"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT7/StateControllerFrame" operator="NotEqual" T7TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T7TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Top" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Left" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Min" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Right" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon7" side="Bottom" relative="$ancestor[@type=PlayerHeroSelectedTalentTreeFrame]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="UseState" State="InUse"/>
        <Action type="SetProperty" frame="$this/T7Label" Text="QBA7AQ" />
      </State>
    </StateGroup>
    <StateGroup name="HeroicIngressStateGroup">
      <DefaultState val="Disabled"/>
      <State name="WIIDE">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/T7AnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="6" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="WIIDE" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="WIIIDE"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="WIIIDE"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="WIIIDE"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="WIIIDE"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="WIIIDE"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="WIIIDE"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="WIIIDE"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicAlwaysVisible">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPAV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicIfAvailable">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFAV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicIfChosen">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIC" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicIfActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFAC" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicIfQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicIfQuestOrBuffOrActiveIsBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicIfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicHeroicIfQuestOrBuffOrActiveIsActiveAndBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicAlwaysVisible">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPAV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicIfAvailable">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFAV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicIfChosen">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIC" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicIfActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFAC" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicIfQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicIfQuestOrBuffOrActiveIsBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicIfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactHeroicIntoBasicVarianHeroicIfQuestOrBuffOrActiveIsActiveAndBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCPIFQB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="UltracompactAlternate"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="UltracompactStandard">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <!-- <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" operator="NotEqual" Toggled="True"/> -->
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroBG" pos="Min" offset="4" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="UTCP" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="Ultracompact"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="Disabled"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="Disabled"/>
      </State>
      <State name="EnabledTracerPulsebombEnabled">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tracer.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="Tracer" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianAlwaysVisible">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="AllVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsAlwaysVisible">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="AllTLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsAlwaysVisible">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="AllElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianIfAvailable">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="EnabledVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsIfAvailable">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="EnabledTLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsIfAvailable">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="EnabledElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianIfChosen">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfChosenVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsIfChosen">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfChosenTLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsIfChosen">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="3"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfChosenElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianIfActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfActiveVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsIfActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfActiveTLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsIfActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfActiveElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianIfQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfQuestVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsIfQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfQuestTLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsIfQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="5"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="IfQuestElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianIfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsQBVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsIfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsQTLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsIfQuestOrBuffOrActiveIsQuestOrBuff">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsQElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianIfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsAVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsIfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsATLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsIfQuestOrBuffOrActiveIsActiveAndBuffOrQuest">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsAElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarianIfQuestOrBuffOrActiveIsActiveAndBuffOrQuest">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT2/QuestStackCounterT2/StateControllerFrame" operator="NotEqual" T2TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsAQVar" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikingsIfQuestOrBuffOrActiveIsActiveAndBuffOrQuest">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsAQTLV" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikingsIfQuestOrBuffOrActiveIsActive">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="Equal" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/AbilityTalentsCooldownsContainerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestAndBuffContainerFrameT4/QuestStackCounterT4/StateControllerFrame" operator="NotEqual" T4TalentState="NoState"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="QBAIsAQElse" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledVarian">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="0"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="2"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="3"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="5"/>
        <When type="StateGroup" frame="$Talent2MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_varian.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="VarianBack" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledLostVikings">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="0"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="2"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="3"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="5"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="TLVBack" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayoutVikings"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="EnabledNotVarianNotLostVikings">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="0"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="1"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="2"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="3"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="4"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="5"/>
        <When type="StateGroup" frame="$Talent4MasterSetting/TogglePulldown2" operator="NotEqual" SelectedValue="6"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierNotAvailable"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierHidden"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="ElseBack" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="EnabledFB">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroBG" pos="Min" offset="4" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="AltFB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="AlternateLayout"/>
      </State>
      <State name="DisabledFB">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroBG" pos="Min" offset="4" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="13" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="DefFB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="DefaultLayout"/>
      </State>
      <State name="CompactFBHTB">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroBG" pos="Min" offset="4" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="26" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="CMPFBHTB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="CompactLayoutHTB"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="CompactLayoutHTB"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="CompactLayoutHTB"/>
      </State>
      <State name="CompactFB">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroBG" pos="Min" offset="4" />
        <Action type="SetAnchor" frame="$this/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" side="Top" relative="$parent" pos="Mid" offset="26" />
        <Action type="SetProperty" frame="$this/HeroicAnchorFrame/Label" Text="CompFB" />
        <Action type="SetState" frame="$this/T1AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T2AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T3AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/HeroicAnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T5AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T6AnchorFrame" Group="LayoutState" State="CompactLayout"/>
        <Action type="SetState" frame="$this/T7AnchorFrame" Group="LayoutState" State="CompactLayout"/>
      </State>
    </StateGroup>
    <Frame type="Label" name="T1Label">
      <Anchor side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="150"/>
      <Anchor side="Left" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1to3LeftOffset"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
    </Frame>
    <Frame type="Label" name="T2Label">
      <Anchor side="Top" relative="$parent/T1Label" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/T1Label" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
    </Frame>
    <Frame type="Label" name="T3Label">
      <Anchor side="Top" relative="$parent/T2Label" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/T2Label" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
    </Frame>
    <Frame type="Label" name="T4Label">
      <Anchor side="Top" relative="$parent/T3Label" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/T3Label" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
    </Frame>
    <Frame type="Label" name="T5Label">
      <Anchor side="Top" relative="$parent/T4Label" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/T4Label" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <Text val="T5"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
    </Frame>
    <Frame type="Label" name="T6Label">
      <Anchor side="Top" relative="$parent/T5Label" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/T5Label" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <Text val="T6"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
    </Frame>
    <Frame type="Label" name="T7Label">
      <Anchor side="Top" relative="$parent/T6Label" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/T6Label" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <Text val="T7"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
    </Frame>
    <!-- <Frame type="Image" name="ImageBoundCheck">
      <Anchor side="Top" relative="$parent/TalentNumberContainers/T2Label" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent/TalentNumberContainers/T2Label" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent/TalentNumberContainers/T2Label" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent/TalentNumberContainers/T2Label" pos="Max" offset="0"/>
      <Texture val="Assets\Textures\storm_ui_homescreenbackground_nexomania.dds"/>
      <RenderPriority val="999" />
      <Alpha val="90"/>
      <Unclipped val="True"/>
    </Frame> -->
    <Frame type="Frame" name="T1AnchorFrame">
      <Anchor side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset"/>
      <Anchor side="Left" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1to3LeftOffset"/>
      <Anchor side="Right" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1to3RightOffset"/>
      <Anchor side="Bottom" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1BottomOffset"/>
      <Frame type="Frame" name="ProxyAnchor">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      </Frame>
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="Disabled">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$INVALID" pos="Min" offset="0" />
        </State>
        <State name="WIIIDE">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#WideTalent1InitialTopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#WideTalent1InitialLeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#WideTalentOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#WideTalentOffset" />
        </State>
        <State name="DefaultLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="CompactLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="AlternateLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="WIDER" />
        </State>
        <State name="Disabled">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Disabled"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="DSBL" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Def" />
        </State>
        <State name="CompactLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="CMP" />
        </State>
        <State name="AlternateLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Alt" />
        </State>
      </StateGroup>
      <StateGroup name="UseState">
        <DefaultState val="InUse"/>
        <State name="InUse">
          <Action type="SetState" frame="$this" Group="ProxyState" State="NotAProxy" on="Enter" undo="false" />
        </State>
        <State name="OutOfUse"/>
      </StateGroup>
      <StateGroup name="OccupiedState">
        <DefaultState val="Unoccupied"/>
        <State name="Occupied">
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[O]]" />
        </State>
        <State name="OccupiedByOutsider">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$this" operator="NotEqual" ProxyState="NotAProxy"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[OO]]" />
        </State>
        <State name="Unoccupied">
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[N]]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyState">
        <DefaultState val="NotAProxy"/>
        <State name="ProxyForT7">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(7)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT2" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT6">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(6)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT2" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT5">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(5)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT2" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT3">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(3)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT2" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT2">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(2)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT2" State="True" on="Enter" undo="false" />
        </State>
        <State name="NotAProxy">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(0)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT2" State="False" on="Enter" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyForT2">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT3">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT5">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT6">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT7">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/T1Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/T1Label" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxyLabel">
        <Anchor side="Top" relative="$parent/Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/Label" pos="Max" offset="1"/>
        <Text val="()"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="OccupiedLabel">
        <Anchor side="Top" relative="$parent/ProxyLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxyLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <Frame type="Frame" name="T2AnchorFrame">
      <Anchor side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2IngressMinTopOffset"/>
      <Anchor side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Min" offset="#Talent2IngressMinLeftOffset"/>
      <Anchor side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset"/>
      <Frame type="Frame" name="ProxyAnchor">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      </Frame>
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#WideTalentOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#WideTalentOffset" />
        </State>
        <State name="Disabled">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$INVALID" pos="Min" offset="0" />
        </State>
        <State name="DefaultLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="CompactLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2IngressMinTopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="#Talent2IngressMinLeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="AlternateLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2IngressMinTopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="#Talent2IngressMinLeftOffsetBy1" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="WIDET2" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="Disabled">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Disabled"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="DSBL" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1Fallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="ProxyForT2"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT2"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1FB" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT2"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="CompactLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="CMP" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Def" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="AlternateLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Alt" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="UseState">
        <DefaultState val="InUse"/>
        <State name="InUse">
          <Action type="SetState" frame="$this" Group="ProxyState" State="NotAProxy" on="Enter" undo="false" />
        </State>
        <State name="OutOfUse"/>
      </StateGroup>
      <StateGroup name="OccupiedState">
        <DefaultState val="Unoccupied"/>
        <State name="Occupied">
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$this" operator="Equal" ProxiedState="ProxiedToSelf"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[O]]" />
        </State>
        <State name="OccupiedByOutsider">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="NotEqual" ProxyState="NotAProxy"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[OO]]" />
        </State>
        <State name="Unoccupied">
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[N]]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyState">
        <DefaultState val="NotAProxy"/>
        <State name="ProxyForT7">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(7)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT6">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(6)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT5">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(5)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT3">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(3)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="True" on="Enter" undo="false" />
        </State>
        <State name="NotAProxy">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(0)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT3" State="False" on="Enter" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyingState">
        <DefaultState val="IsNotProxying"/>
        <State name="IsProxying"/>
        <State name="IsNotProxying"/>
      </StateGroup>
      <StateGroup name="ProxiedState">
        <DefaultState val="ProxiedToSelf"/>
        <State name="ProxiedToT1">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[1]" />
        </State>
        <State name="ProxiedToSelf">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[2]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyForT3">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT5">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT6">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT7">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/T2Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/T2Label" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxyLabel">
        <Anchor side="Top" relative="$parent/Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/Label" pos="Max" offset="1"/>
        <Text val="()"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxiedLabel">
        <Anchor side="Top" relative="$parent/ProxyLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxyLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="OccupiedLabel">
        <Anchor side="Top" relative="$parent/ProxiedLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxiedLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <Frame type="Frame" name="T3AnchorFrame">
      <Anchor side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset"/>
      <Anchor side="Left" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1to3LeftOffset"/>
      <Anchor side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset"/>
      <Frame type="Frame" name="ProxyAnchor">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      </Frame>
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/T2AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T2AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#WideTalentOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#WideTalentOffset" />
        </State>
        <State name="Disabled">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$INVALID" pos="Min" offset="0" />
        </State>
        <State name="DefaultLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent3TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="CompactLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="AlternateLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffsetOffsetBy1" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="WIDET3" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="Disabled">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Disabled"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="DSBL" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1Fallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="ProxyForT3"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT3"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1FB" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT3"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT3"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT3"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2FB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT3"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT3"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT3"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PRFB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT3"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PR" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="CompactLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="CMP" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Def" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="AlternateLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Alt" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="UseState">
        <DefaultState val="InUse"/>
        <State name="InUse">
          <Action type="SetState" frame="$this" Group="ProxyState" State="NotAProxy" on="Enter" undo="false" />
        </State>
        <State name="OutOfUse"/>
      </StateGroup>
      <StateGroup name="OccupiedState">
        <DefaultState val="Unoccupied"/>
        <State name="Occupied">
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$this" operator="Equal" ProxiedState="ProxiedToSelf"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[O]]" />
        </State>
        <State name="OccupiedByOutsider">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="NotEqual" ProxyState="NotAProxy"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[OO]]" />
        </State>
        <State name="Unoccupied">
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[N]]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyState">
        <DefaultState val="NotAProxy"/>
        <State name="ProxyForT7">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(7)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT6">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(6)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT5">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(5)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="True" on="Enter" undo="false" />
        </State>
        <State name="NotAProxy">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(0)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT5" State="False" on="Enter" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyingState">
        <DefaultState val="IsNotProxying"/>
        <State name="IsProxying"/>
        <State name="IsNotProxying"/>
      </StateGroup>
      <StateGroup name="ProxiedState">
        <DefaultState val="ProxiedToSelf"/>
        <State name="ProxiedToT1">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[1]" />
        </State>
        <State name="ProxiedToT2">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[2]" />
        </State>
        <State name="ProxiedToSelf">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[3]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyForT5">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT6">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT7">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/T3Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/T3Label" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxyLabel">
        <Anchor side="Top" relative="$parent/Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/Label" pos="Max" offset="1"/>
        <Text val="()"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxiedLabel">
        <Anchor side="Top" relative="$parent/ProxyLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxyLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="OccupiedLabel">
        <Anchor side="Top" relative="$parent/ProxiedLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxiedLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <Frame type="Frame" name="HeroicAnchorFrame">
      <Anchor side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent4IngressMinLeftOffset"/>
      <Anchor side="Top" relative="$parent" pos="Mid" offset="#Talent4IngressMidTopOffset"/>
      <Anchor side="Right" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset"/>
      <CollapseLayout val="True"/>
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE"/>
        <State name="Ultracompact"/>
        <State name="UltracompactAlternate"/>
        <State name="DefaultLayout"/>
        <State name="CompactLayout"/>
        <State name="AlternateLayout"/>
        <State name="AlternateLayoutVikings"/>
      </StateGroup>
      <StateGroup name="UseState">
        <DefaultState val="InUse"/>
        <State name="InUse">
          <Action type="SetProperty" frame="$this/UseStateLabel" Text="[U]" />
        </State>
        <State name="OutOfUse">
          <Action type="SetProperty" frame="$this/UseStateLabel" Text="[F]" />
        </State>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDEIngress">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/HeroAbil3" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/HeroAbil3" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#WideHeroicTalentOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#WideHeroicTalentOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="WideIng" />
        </State>
        <State name="WIIIDEStandard">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <!-- <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="False"/> -->
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#WideHeroicTalentOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#WideHeroicTalentOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="WIDER" />
        </State>
        <State name="Ultracompact">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Ultracompact"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent4TopOffsetUltracompact" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="UTCP" />
        </State>
        <State name="UltracompactAlternate">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="UltracompactAlternate"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent4TopOffsetUltracompactIntoBasic" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="UTCP" />
        </State>
        <State name="DefaultIngress">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/HeroAbil3" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/HeroAbil3" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TopBarBasicAbilSiblingOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TopBarBasicAbilSiblingOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="DefIng" />
        </State>
        <State name="DefaultLayoutNoT1NoT2NoT3AndHasBaseline">
          <When type="StateGroup" frame="$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT0" operator="NotEqual" T0TalentState="NoState" />
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent4TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="DefN1-3" />
        </State>
        <State name="DefaultLayoutNoT2NoT3AndNoBaseline">
          <When type="StateGroup" frame="$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT0" operator="Equal" T0TalentState="NoState" />
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent4TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="DefN2-3" />
        </State>
        <State name="DefaultLayoutNoT2NoT3AndTracer">
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tracer.dds"/>
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent4TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="DefTr" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent4TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent4LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="Defa" />
        </State>
        <State name="CompactLayoutIngress">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/HeroAbil3" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/HeroAbil3" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="CMPIng" />
        </State>
        <State name="CompactLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="#Talent2IngressMinLeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="Comp" />
        </State>
        <State name="AlternateLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayout"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Mid" offset="#Talent4IngressMidTopOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="Alte" />
        </State>
        <State name="AlternateLayoutVikings">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayoutVikings"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Mid" offset="#Talent4VikingsIngressMidTopOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#Talent4IngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/SubStateLabel" Text="AltVi" />
        </State>
      </StateGroup>
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/T4Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/T4Label" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="SubStateLabel">
        <Anchor side="Top" relative="$parent/Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/Label" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="UseStateLabel">
        <Anchor side="Top" relative="$parent/SubStateLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/SubStateLabel" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <Frame type="Frame" name="T5AnchorFrame">
      <Anchor side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset"/>
      <Anchor side="Left" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent5to7LeftOffset"/>
      <Anchor side="Right" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent5to7RightOffset"/>
      <Anchor side="Bottom" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1BottomOffset"/>
      <Frame type="Frame" name="ProxyAnchor">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      </Frame>
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#WideTalentOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#WideTalentOffset" />
        </State>
        <State name="Disabled">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$INVALID" pos="Min" offset="0" />
        </State>
        <State name="DefaultLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$parent/$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="CompactLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="22" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="CompactLayoutHTB">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="-1" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="AlternateLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$parent/$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="WIDER" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="Disabled">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Disabled"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="DSBL" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1Fallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="ProxyForT5"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1FB" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT5"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2FB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT5"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PRFB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PR" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="ProxyForT5"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3FB" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="ProxyForT5"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3PRFB" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT5"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3PR" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="CompactLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="CMP" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="CompactLayoutHTB">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayoutHTB"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="CMPHB" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Def" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="AlternateLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Alt" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="UseState">
        <DefaultState val="InUse"/>
        <State name="InUse">
          <Action type="SetState" frame="$this" Group="ProxyState" State="NotAProxy" on="Enter" undo="false" />
        </State>
        <State name="OutOfUse"/>
      </StateGroup>
      <StateGroup name="OccupiedState">
        <DefaultState val="Unoccupied"/>
        <State name="Occupied">
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$this" operator="Equal" ProxiedState="ProxiedToSelf"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[O]]" />
        </State>
        <State name="OccupiedByOutsider">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="NotEqual" ProxyState="NotAProxy"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[OO]]" />
        </State>
        <State name="Unoccupied">
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[N]]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyState">
        <DefaultState val="NotAProxy"/>
        <State name="ProxyForT7">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(7)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="True" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
        </State>
        <State name="ProxyForT6">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(6)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="True" on="Enter" undo="false" />
        </State>
        <State name="NotAProxy">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(0)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxyForT6" State="False" on="Enter" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyingState">
        <DefaultState val="IsNotProxying"/>
        <State name="IsProxying"/>
        <State name="IsNotProxying"/>
      </StateGroup>
      <StateGroup name="ProxiedState">
        <DefaultState val="ProxiedToSelf"/>
        <State name="ProxiedToT1">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[1]" />
        </State>
        <State name="ProxiedToT2">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[2]" />
        </State>
        <State name="ProxiedToT3">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[3]" />
        </State>
        <State name="ProxiedToSelf">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[5]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyForT6">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <StateGroup name="ProxyForT7">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/T5Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/T5Label" pos="Max" offset="1"/>
        <Text val="()"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxyLabel">
        <Anchor side="Top" relative="$parent/Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/Label" pos="Max" offset="1"/>
        <Text val="()"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxiedLabel">
        <Anchor side="Top" relative="$parent/ProxyLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxyLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="OccupiedLabel">
        <Anchor side="Top" relative="$parent/ProxiedLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxiedLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <Frame type="Frame" name="T6AnchorFrame">
      <Anchor side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset"/>
      <Anchor side="Left" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent5to7LeftOffset"/>
      <Anchor side="Right" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent5to7RightOffset"/>
      <Anchor side="Bottom" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2BottomOffset"/>
      <Frame type="Frame" name="ProxyAnchor">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      </Frame>
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/T5AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T5AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#WideTalentOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#WideTalentOffset" />
        </State>
        <State name="Disabled">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$INVALID" pos="Min" offset="0" />
        </State>
        <State name="DefaultLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$parent/$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="CompactLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$parent/$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="CompactLayoutHTB">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$parent/$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="-1" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
        <State name="AlternateLayout">
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Top" relative="$parent/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Right" relative="$parent/$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this/ProxyAnchor" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
        </State>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="WIDER" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="Disabled">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Disabled"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="DSBL" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1Fallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="ProxyForT6"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1FB" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT6"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2FB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT6"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PRFB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PR" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="ProxyForT6"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3FB" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="ProxyForT6"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3PRFB" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3PR" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="ProxyForT6"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5FB" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="ProxyForT6"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5PRFB" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT6"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5PR" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="CompactLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="CMP" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="CompactLayoutHTB">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayoutHTB"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="CMPHB" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Def" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="AlternateLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="Alt" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="UseState">
        <DefaultState val="InUse"/>
        <State name="InUse">
          <Action type="SetState" frame="$this" Group="ProxyState" State="NotAProxy" on="Enter" undo="false" />
        </State>
        <State name="OutOfUse"/>
      </StateGroup>
      <StateGroup name="OccupiedState">
        <DefaultState val="Unoccupied"/>
        <State name="Occupied">
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$this" operator="Equal" ProxiedState="ProxiedToSelf"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[O]]" />
        </State>
        <State name="OccupiedByOutsider">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="NotEqual" ProxyState="NotAProxy"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[OO]]" />
        </State>
        <State name="Unoccupied">
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[N]]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyState">
        <DefaultState val="NotAProxy"/>
        <State name="ProxyForT7">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(7)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="True" on="Enter" undo="false" />
        </State>
        <State name="NotAProxy">
          <Action type="SetProperty" frame="$this/ProxyLabel" Text="(0)" />
          <Action type="SetState" frame="$this" Group="ProxyForT7" State="False" on="Enter" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyingState">
        <DefaultState val="IsNotProxying"/>
        <State name="IsProxying"/>
        <State name="IsNotProxying"/>
      </StateGroup>
      <StateGroup name="ProxiedState">
        <DefaultState val="ProxiedToSelf"/>
        <State name="ProxiedToT1">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[1]" />
        </State>
        <State name="ProxiedToT2">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[2]" />
        </State>
        <State name="ProxiedToT3">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[3]" />
        </State>
        <State name="ProxiedToT5">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[5]" />
        </State>
        <State name="ProxiedToSelf">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[6]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyForT7">
        <DefaultState val="False"/>
        <State name="True"/>
        <State name="False"/>
      </StateGroup>
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/T6Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/T6Label" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxyLabel">
        <Anchor side="Top" relative="$parent/Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/Label" pos="Max" offset="1"/>
        <Text val="()"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="ProxiedLabel">
        <Anchor side="Top" relative="$parent/ProxyLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxyLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="OccupiedLabel">
        <Anchor side="Top" relative="$parent/ProxiedLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxiedLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <Frame type="Frame" name="T7AnchorFrame">
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/T7Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/T7Label" pos="Max" offset="1"/>
        <Text val="asdf"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE"/>
        <State name="DefaultLayout"/>
        <State name="CompactLayout"/>
        <State name="CompactLayoutHTB"/>
        <State name="AlternateLayout"/>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIIDE"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T6AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T6AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#WideTalentOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#WideTalentOffset" />
          <Action type="SetProperty" frame="$this/Label" Text="WIDER" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="Disabled">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Disabled"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="DSBL" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1Fallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1FB" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo1">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT2="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T1AnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR1" />
          <Action type="SetState" frame="$parent/T1AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT1" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2FB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PRFB" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo2IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT3="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR2PR" />
          <Action type="SetState" frame="$parent/T2AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT2" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3FB" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3PRFB" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo3IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT5="False"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T3AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR3PR" />
          <Action type="SetState" frame="$parent/T3AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT3" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5FB" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5PRFB" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo5IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <When type="StateGroup" frame="$parent/T5AnchorFrame" operator="Equal" ProxyForT6="False"/>
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T5AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR5PR" />
          <Action type="SetState" frame="$parent/T5AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT5" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo6OutOfUseFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR6FB" />
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT6" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo6OutOfUse">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR6" />
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT6" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo6IsProxyingFallback">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" ProxyState="ProxyForT7"/>
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="PR6PRFB" />
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT6" undo="false" />
        </State>
        <State name="DefaultLayoutProxyTo6IsProxying">
          <When type="Property" frame="$Talent0MasterSetting/Proxy/CheckBoxButton" Toggled="True" />
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" ProxyingState="IsProxying"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" ProxyState="NotAProxy"/>
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="ProxyForT7"/>
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsProxying"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/T6AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="RP6PR" />
          <Action type="SetState" frame="$parent/T6AnchorFrame" Group="ProxyState" State="NotAProxy" on="Exit" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToT6" undo="false" />
        </State>
        <State name="CompactLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent2TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/Label" Text="CMP" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="CompactLayoutHTB">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="CompactLayoutHTB"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent1TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/Label" Text="CMPHB" />
          <Action type="SetState" frame="$this" Group="ProxyingState" State="IsNotProxying" undo="false" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent3TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/Label" Text="Def" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
        <State name="AlternateLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayout"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent3TopOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this" pos="Max" offset="#TalentMinorIngressAnchorOffsetNeg" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/Label" Text="Alt" />
          <Action type="SetState" frame="$this" Group="ProxiedState" State="ProxiedToSelf" undo="false" />
        </State>
      </StateGroup>
      <StateGroup name="UseState">
        <DefaultState val="InUse"/>
        <State name="InUse"/>
        <State name="OutOfUse"/>
      </StateGroup>
      <StateGroup name="OccupiedState">
        <DefaultState val="Unoccupied"/>
        <State name="Occupied">
          <When type="StateGroup" frame="$this" operator="Equal" UseState="InUse"/>
          <When type="StateGroup" frame="$this" operator="Equal" ProxiedState="ProxiedToSelf"/>
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[O]]" />
        </State>
        <State name="Unoccupied">
          <Action type="SetProperty" frame="$this/OccupiedLabel" Text="[[N]]" />
        </State>
      </StateGroup>
      <StateGroup name="ProxyingState">
        <DefaultState val="IsNotProxying"/>
        <State name="IsProxying"/>
        <State name="IsNotProxying"/>
      </StateGroup>
      <StateGroup name="ProxiedState">
        <DefaultState val="ProxiedToSelf"/>
        <State name="ProxiedToT1">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[1]" />
        </State>
        <State name="ProxiedToT2">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[2]" />
        </State>
        <State name="ProxiedToT3">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[3]" />
        </State>
        <State name="ProxiedToT5">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[5]" />
        </State>
        <State name="ProxiedToT6">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[6]" />
        </State>
        <State name="ProxiedToSelf">
          <Action type="SetProperty" frame="$this/ProxiedLabel" Text="[7]" />
        </State>
      </StateGroup>
      <Frame type="Label" name="ProxiedLabel">
        <Anchor side="Top" relative="$parent/Label" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/Label" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
      <Frame type="Label" name="OccupiedLabel">
        <Anchor side="Top" relative="$parent/ProxiedLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/ProxiedLabel" pos="Max" offset="1"/>
        <Text val="[]"/>
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <StateGroup name="BaselineAnchorStateGroup">
      <DefaultState val="Disabled"/>
      <State name="WIIDE">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="WIIDE"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="WIIIDE" />
      </State>
      <State name="Ultracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tracer.dds"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="Disabled"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="UTCP" />
      </State>
      <State name="Compact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="Compact"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="COMPACT" />
      </State>
      <State name="Tracer">
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_tracer.dds"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AlternateLayoutTracer"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BTr" />
      </State>
      <State name="DeathwingHeroicAvailable">
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierAvailable"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AlternateLayoutTracer"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BDW1" />
      </State>
      <State name="DeathwingHeroicNotSelected">
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" TextureState="TierSelected"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AlternateLayoutTracer"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BDW2" />
      </State>
      <State name="DeathwingHeroicCataclysm">
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" texture="Assets\Textures\storm_ui_icon_deathwing_cataclysm.dds"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AlternateLayoutTracer"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BDW3" />
      </State>
      <State name="DeathwingHeroicUltracompactFearIngress">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_icon_deathwing_cataclysm.dds"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="DTCPU"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BDW4" />
      </State>
      <State name="DeathwingHeroicUltracompactFearNotIngress">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="False"/>
        <When type="StateGroup" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="Equal" TextureState="TierSelected"/>
        <When type="Property" frame="$this/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_icon_deathwing_cataclysm.dds"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_deathwing.dds"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="DTCPL"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BDW5" />
      </State>
      <State name="noT1noT2noT3noT4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToLeft"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIUUUU" />
      </State>
      <State name="T1T2T3noT4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToT20"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIOOOU" />
      </State>
      <State name="T1T2noT3noT4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToLeft"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIOOUU" />
      </State>
      <State name="T1noT2noT3noT4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToLeft"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIOUUU" />
      </State>
      <State name="T1NoT2NoT3T4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToT20"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIOUUO" />
      </State>
      <State name="T1T2NoT3T4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToT20"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIOOUO" />
      </State>
      <State name="T1T2T3T4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToT20"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIOOOO" />
      </State>
      <State name="noT1noT2noT3T4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T1AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="AnchorToIngressHeroic"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="BIUUUO" />
      </State>
      <State name="Standard">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
        <Action type="SetState" frame="$this/BaselineAnchor" Group="LayoutState" State="DefaultLayout"/>
        <Action type="SetProperty" frame="$this/BaselineLabelLabel" Text="FIDef" />
      </State>
      <State name="Disabled">
      </State>
    </StateGroup>
    <Frame type="Label" name="BaselineLabelLabel">
      <Anchor side="Top" relative="$parent/T7Label" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/T7Label" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
    </Frame>
    <Frame type="Frame" name="BaselineAnchor">
      <StateGroup name="LayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="DefaultLayout"/>
        <State name="AnchorToLeft"/>
        <State name="AnchorToIngressHeroic"/>
        <State name="AnchorToT20"/>
        <State name="AlternateLayoutTracer"/>
        <State name="DTCPU"/>
        <State name="DTCPL"/>
        <State name="WIIDE"/>
        <State name="Compact"/>
        <State name="Disabled"/>
      </StateGroup>
      <StateGroup name="TrueLayoutState">
        <DefaultState val="DefaultLayout"/>
        <State name="WIIIDE">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="WIIDE"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T5AnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T5AnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchorWide" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchorWide" />
          <Action type="SetProperty" frame="$this/Label" Text="WIDER" />
        </State>
        <State name="Disabled">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Disabled"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="DSBL" />
        </State>
        <State name="Compact">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="Compact"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T2AnchorFrame/ProxyAnchor" pos="Max" offset="#Talent2IngressMinLeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TalentMinorIngressAnchorOffset" />
          <Action type="SetProperty" frame="$this/Label" Text="Compa" />
        </State>
        <State name="DefaultLayoutNoTalents">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="37" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BANTNH" />
        </State>
        <State name="DefaultLayoutHeroicToBasic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent3BottomOffset" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this" pos="Max" offset="#SpazzoTopBarBaselineAnchorNeg" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BAHTBWT" />
        </State>
        <State name="DefaultLayoutNoHeroic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T1AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <!-- <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="False"/> -->
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent3BottomOffset" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this" pos="Max" offset="#SpazzoTopBarBaselineAnchorNeg" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BANHWT" />
        </State>
        <State name="DefaultLayoutNoT2NoT3HeroicToBasic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="37" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BADHTB" />
        </State>
        <State name="DefaultLayoutIsT2NoT3HeroicToBasic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="1" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BAIsT2NoT3HTB" />
        </State>
        <State name="DefaultLayoutNoT2IsT3HeroicToBasic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="1" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BANoT2IsT3HTB" />
        </State>
        <State name="DefaultLayoutIsT2IsT3HeroicToBasic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="37" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BAIsT2IsT3HTB" />
        </State>
        <State name="DefaultLayoutNoT2NoT3NoHeroic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <When type="StateGroup" frame="$parent/T2AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
          <!-- <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="False"/> -->
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/T1AnchorFrame/ProxyAnchor" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="37" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BAD" />
        </State>
        <State name="DefaultLayout">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DefaultLayout"/>
          <!-- <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="False"/> -->
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this" pos="Max" offset="#SpazzoTopBarBaselineAnchorNeg" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BA" />
        </State>
        <State name="AnchorToLeft">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AnchorToLeft"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent" pos="Min" offset="37" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroBG" pos="Min" offset="#Talent1to3LeftOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BL" />
        </State>
        <State name="AnchorToIngressHeroic">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AnchorToIngressHeroic"/>
          <!-- <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="False"/> -->
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this" pos="Max" offset="#SpazzoTopBarBaselineAnchorNeg" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarBaselineAnchor" />
          <Action type="SetProperty" frame="$this/Label" Text="BI" />
        </State>
        <State name="AnchorToT20No20AndNo16">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AnchorToT20"/>
          <When type="StateGroup" frame="$parent/T6AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <When type="StateGroup" frame="$parent/T7AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent3BottomOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/HeroBG" pos="Max" offset="#Talent5to7RightOffset" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this" pos="Max" offset="#BaselineIngressNoSpaceSizeNeg" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this" pos="Max" offset="#BaselineIngressNoSpaceSizeNeg" />
          <Action type="SetProperty" frame="$this/Label" Text="BR" />
        </State>
        <State name="AnchorToT20">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AnchorToT20"/>
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="#Talent3BottomOffset" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/HeroBG" pos="Max" offset="#BaselineOffsetFromRightOfT20" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$this" pos="Max" offset="#BaselineIngressNoSpaceSizeNegSmaller" />
          <Action type="SetAnchor" frame="$this" side="Top" relative="$this" pos="Max" offset="#BaselineIngressNoSpaceSizeNegSmaller" />
          <Action type="SetProperty" frame="$this/Label" Text="BR20" />
        </State>
        <State name="AlternateLayoutTracer">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="AlternateLayoutTracer"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/HeroicAnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/HeroicAnchorFrame" pos="Max" offset="0" />
          <Action type="SetProperty" frame="$this/Label" Text="BH" />
        </State>
        <State name="DTCPU">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DTCPU"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroicAnchorFrame" pos="Min" offset="#HeroicUltracompactAnchorOffsetDWNeg" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffsetDW" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffsetDW" />
          <Action type="SetProperty" frame="$this/Label" Text="BHDWU" />
        </State>
        <State name="DTCPL">
          <When type="StateGroup" frame="$this" operator="Equal" LayoutState="DTCPL"/>
          <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/HeroicAnchorFrame" pos="Min" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/HeroicAnchorFrame" pos="Max" offset="0" />
          <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffset" />
          <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#HeroicUltracompactAnchorOffset" />
          <Action type="SetProperty" frame="$this/Label" Text="BHDWL" />
        </State>
      </StateGroup>
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent/$parent/BaselineLabelLabel" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/$parent/BaselineLabelLabel" pos="Max" offset="1"/>
        <Unclipped val="True"/>
        <RenderPriority val="999" />
        <Visible val="#TopBarAbilityDebug"/>
        <Style val="SpazzoDebug"/>
        <Alpha val="#TopBarAbilityAlpha"/>
        <Unclipped val="True"/>
      </Frame>
    </Frame>
    <Frame type="Label" name="FountainLabel">
      <Anchor side="Top" relative="$parent/BaselineLabelLabel" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/BaselineLabelLabel" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="FTDef"/>
    </Frame>
    <Frame type="Label" name="MapMechanicLabel">
      <Anchor side="Top" relative="$parent/FountainLabel" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/FountainLabel" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="MMDEF"/>
    </Frame>
    <Frame type="Label" name="UnitSelectedTypeLabel">
      <Anchor side="Top" relative="$parent/MapMechanicLabel" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/MapMechanicLabel" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/SelectionUnitStatusPanel/UnitStatusFrame0/@Unit}"/>
    </Frame>
    <Frame type="Label" name="UnitSelectedOwnerLabel">
      <Anchor side="Top" relative="$parent/UnitSelectedTypeLabel" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent/UnitSelectedTypeLabel" pos="Max" offset="1"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/SelectionUnitStatusPanel/UnitStatusFrame0/@ControlPlayerId}"/>
    </Frame>
    <Frame type="Label" name="HeroUnitSelectedTypeLabel">
      <Anchor side="Top" relative="$parent/UnitSelectedTypeLabel" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/UnitSelectedTypeLabel" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/@Unit}"/>
    </Frame>
    <Frame type="Label" name="HeroUnitSelectedOwnerLabel">
      <Anchor side="Top" relative="$parent/HeroUnitSelectedTypeLabel" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent/HeroUnitSelectedTypeLabel" pos="Max" offset="1"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/@ControlPlayerId}"/>
    </Frame>
    <Frame type="Label" name="Abil3LabelState">
      <Anchor side="Top" relative="$parent/HeroUnitSelectedTypeLabel" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/HeroUnitSelectedTypeLabel" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="NULL"/>
    </Frame>
    <Frame type="Label" name="DummyVeterancyLabel">
      <Anchor side="Top" relative="$parent/Abil3LabelState" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/Abil3LabelState" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/UnitStatusDummyBehaviorCount/BehaviorIcon/@CurrentStackCount}"/>
    </Frame>
    <Frame type="Label" name="TalentColorText">
      <Anchor side="Top" relative="$parent/DummyVeterancyLabel" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/DummyVeterancyLabel" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/HeroSelectedTalentTreeFrame/@Color}"/>
    </Frame>
    <Frame type="Label" name="UnitStatusColorText">
      <Anchor side="Top" relative="$parent/TalentColorText" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/TalentColorText" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/SelectionUnitStatusPanel/UnitStatusFrame0/UnitColourFrame/@Color}"/>
    </Frame>
    <Frame type="Label" name="HardCodedColorText">
      <Anchor side="Top" relative="$parent/UnitStatusColorText" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/UnitStatusColorText" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/PlayerColourFrame/@Color}"/>
    </Frame>
    <Frame type="Label" name="PlayerTeamText">
      <Anchor side="Top" relative="$parent/HardCodedColorText" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/HardCodedColorText" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/PlayerHeroIconFrame/@VersusModePlayerSide}"/>
    </Frame>
    <Frame type="Label" name="PlayerSlotText">
      <Anchor side="Top" relative="$parent/PlayerTeamText" pos="Max" offset="1"/>
      <Anchor side="Left" relative="$parent/PlayerTeamText" pos="Min" offset="0"/>
      <Unclipped val="True"/>
      <RenderPriority val="999" />
      <Visible val="#TopBarAbilityDebug"/>
      <Style val="SpazzoDebug"/>
      <Alpha val="#TopBarAbilityAlpha"/>
      <Unclipped val="True"/>
      <Text val="{$parent/PlayerHeroIconFrame/@VersusModePlayerIndex}"/>
    </Frame>
    <StateGroup name="FountainAnchorStateGroup">
      <State name="WIIIDE">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/T5AnchorFrame" pos="Max" offset="0" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="WIIIDE" />
      </State>
      <State name="Ultracompact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/HeroBG" pos="Max" offset="#TopBarCompactFountain" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="UTCP" />
      </State>
      <State name="Compact">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/HeroBG" pos="Max" offset="#TopBarCompactFountain" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="Compact" />
      </State>
      <State name="PinTo10Tracer">
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="Equal" LayoutState="AlternateLayoutTracer"/>
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="False"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/BaselineAnchor" pos="Max" offset="0" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="Tracer10" />
      </State>
      <State name="PinTo10TracerTwo">
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="Equal" LayoutState="AlternateLayoutTracer"/>
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/BaselineAnchor" pos="Max" offset="0" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="Tracer10_2" />
      </State>
      <State name="PinTo7Tracer">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="Equal" LayoutState="AlternateLayoutTracer"/>
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="27" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="Tracer7" />
      </State>
      <State name="PinToLeftTracer">
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="Equal" LayoutState="AlternateLayoutTracer"/>
        <When type="Property" frame="$Talent0MasterSetting/ShowActives/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="3" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="TracerL" />
      </State>
      <State name="PinTo7Viking">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="27" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="To7Viking" />
      </State>
      <State name="PinToLeftViking">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="3" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeftViking" />
      </State>
      <State name="PinToHeroic">
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" operator="NotEqual" Toggled="True"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/HeroicAnchorFrame" pos="Max" offset="0" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="To10" />
      </State>
      <State name="PinToBaseline">
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT0" operator="NotEqual" T0TalentState="NoState" />
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="NotEqual" LayoutState="AnchorToT20"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/BaselineAnchor" pos="Max" offset="0" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeftBaselineOnly" />
      </State>
      <State name="PinToBaselineTwo">
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT0" operator="NotEqual" T0TalentState="NoState" />
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="NotEqual" TrueLayoutState="DefaultLayoutIsT2NoT3HeroicToBasic"/>
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="NotEqual" LayoutState="AnchorToT20"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent/BaselineAnchor" pos="Max" offset="0" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeftBaselineOnlyHTB" />
      </State>
      <State name="PinToBaselineOverrideTo7">
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT0" operator="NotEqual" T0TalentState="NoState" />
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="Equal" TrueLayoutState="DefaultLayoutIsT2NoT3HeroicToBasic"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="27" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="To7OWHTB" />
      </State>
      <State name="PinToBaselineOverrideToLeft">
        <When type="StateGroup" frame="$this/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/QuestStackCounterT0" operator="NotEqual" T0TalentState="NoState" />
        <When type="StateGroup" frame="$this/BaselineAnchor" operator="Equal" TrueLayoutState="DefaultLayoutIsT2NoT3HeroicToBasic"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="3" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeftOWHTB" />
      </State>
      <State name="PinTo7">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="27" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="To7" />
      </State>
      <State name="PinTo7Two">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="NotEqual" OccupiedState="Unoccupied"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="27" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="To7HTB" />
      </State>
      <State name="PinToLeft">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="3" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeft" />
      </State>
      <State name="PinToLeft2">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="3" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeft2" />
      </State>
      <State name="PinToLeft3">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="StateGroup" frame="$this/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="3" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeft3" />
      </State>
      <State name="PinToLeft4">
        <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
        <When type="StateGroup" frame="$this/T3AnchorFrame" operator="Equal" OccupiedState="Unoccupied"/>
        <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
        <When type="Property" frame="$this/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
        <Action type="SetAnchor" frame="$this/FountainAnchor" side="Left" relative="$parent" pos="Min" offset="3" />
        <Action type="SetProperty" frame="$this/FountainLabel" Text="ToLeft" />
      </State>
      <State name="Fallback">
        <Action type="SetProperty" frame="$this/FountainLabel" Text="FTUNK" />
      </State>
    </StateGroup>
    <Frame type="Frame" name="FountainAnchor">
      <!-- <Anchor side="Top" relative="$parent" pos="Min" offset="#SpazzoTopBarFountainTopOffset"/> -->
      <Anchor side="Bottom" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent/HeroicAnchorFrame" pos="Max" offset="0"/>
      <Anchor side="Top" relative="$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="#SpazzoTopBarHealingFountainSizeNeg"/>
      <Anchor side="Right" relative="$this" pos="Min" offset="#SpazzoTopBarHealingFountainSize"/>
    </Frame>
    <Frame type="PlayerHeroSelectedTalentTreeFrame" name="HeroSelectedTalentTreeFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      <PlayerId val="{$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
      <TooltipFrame val="HeroTalentTooltip" />
      <AcceptsMouse val="False"/>
      <AcceptsMouseTooltip val="False"/>
      <RenderPriority val="400"/>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon0">
        <Anchor side="Left" relative="$parent/$parent" pos="Max" offset="-30" />
        <Anchor side="Top" relative="$parent/$parent" pos="Max" offset="-20" />
        <Anchor side="Right" relative="$parent/$parent" pos="Min" offset="-30" />
        <Anchor side="Bottom" relative="$parent/$parent" pos="Min" offset="-20" />
        <Width val="20" />
        <Height val="20" />
        <Alpha val="0"/>
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <Frame type="Image" name="IconImage">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
          <RenderPriority val="#RenderPriorityLevel_1" />
          <Width val="23" />
          <Height val="23" />
          <Unclipped val="False"/>
          <IgnoreParentColor val="true" />
          <Visible val="True"/>
          <Alpha val="0"/>
          <AcceptsMouse val="False"/>
          <AcceptsMouseTooltip val="False"/>
          <Frame type="Label" name="Label">
            <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
            <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
            <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
            <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
            <Options val="ScaleToPreventTruncation" />
            <Text val="Jimmies"/>
            <Width val="600" />
            <Height val="600" />
            <Style val="Storm_ScoreScreenResultValueTeam2" />
            <IgnoreParentColor val="true" />
            <RenderPriority val="#RenderPriorityLevel_1" />
            <Visible val="True"/>
            <Unclipped val="False"/>
            <Alpha val="0"/>
            <AcceptsMouse val="False"/>
            <AcceptsMouseTooltip val="False"/>
          </Frame>
        </Frame>
      </Frame>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon1" template="SpazzoCustomTopBar/TalentTreeIconTemplate">
        <Anchor side="Left" relative="$parent" pos="Min" offset="#Talent1to3LeftOffset"/>
        <Anchor side="Right" relative="$parent" pos="Min" offset="#Talent1to3RightOffset"/>
        <Anchor side="Top" relative="$parent" pos="Min" offset="#Talent1TopOffset"/>
        <Anchor side="Bottom" relative="$parent" pos="Min" offset="#Talent1BottomOffset"/>
      </Frame>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon2" template="SpazzoCustomTopBar/TalentTreeIconTemplate">
        <Anchor side="Left" relative="$parent" pos="Min" offset="#Talent1to3LeftOffset"/>
        <Anchor side="Right" relative="$parent" pos="Min" offset="#Talent1to3RightOffset"/>
        <Anchor side="Top" relative="$parent" pos="Min" offset="#Talent2TopOffset" />
        <Anchor side="Bottom" relative="$parent" pos="Min" offset="#Talent2BottomOffset" />
      </Frame>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon3" template="SpazzoCustomTopBar/TalentTreeIconTemplate">
        <Anchor side="Left" relative="$parent" pos="Min" offset="#Talent1to3LeftOffset"/>
        <Anchor side="Right" relative="$parent" pos="Min" offset="#Talent1to3RightOffset"/>
        <Anchor side="Top" relative="$parent" pos="Min" offset="#Talent3TopOffset" />
        <Anchor side="Bottom" relative="$parent" pos="Min" offset="#Talent3BottomOffset" />
      </Frame>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon4" template="SpazzoCustomTopBar/TalentTreeIconTemplate">
        <Anchor side="Left" relative="$parent" pos="Min" offset="#Talent4LeftOffset"/>
        <Anchor side="Right" relative="$parent" pos="Min" offset="#Talent4RightOffset"/>
        <Anchor side="Top" relative="$parent" pos="Min" offset="#Talent4TopOffset"/>
        <Anchor side="Bottom" relative="$parent" pos="Min" offset="#Talent4BottomOffset"/>
      </Frame>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon5" template="SpazzoCustomTopBar/TalentTreeIconTemplate">
        <Anchor side="Left" relative="$parent" pos="Max" offset="#Talent5to7LeftOffset"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="#Talent5to7RightOffset"/>
        <Anchor side="Top" relative="$parent" pos="Min" offset="#Talent1TopOffset"/>
        <Anchor side="Bottom" relative="$parent" pos="Min" offset="#Talent1BottomOffset"/>
      </Frame>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon6" template="SpazzoCustomTopBar/TalentTreeIconTemplate">
        <Anchor side="Left" relative="$parent" pos="Max" offset="#Talent5to7LeftOffset"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="#Talent5to7RightOffset"/>
        <Anchor side="Top" relative="$parent" pos="Min" offset="#Talent2TopOffset" />
        <Anchor side="Bottom" relative="$parent" pos="Min" offset="#Talent2BottomOffset" />
      </Frame>
      <Frame type="UnitStatusTalentIcon" name="TalentTreeIcon7" template="SpazzoCustomTopBar/TalentTreeIconTemplate">
        <Anchor side="Left" relative="$parent" pos="Max" offset="#Talent5to7LeftOffset"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="#Talent5to7RightOffset"/>
        <Anchor side="Top" relative="$parent" pos="Min" offset="#Talent3TopOffset" />
        <Anchor side="Bottom" relative="$parent" pos="Min" offset="#Talent3BottomOffset" />
      </Frame>
    </Frame>
    <!-- <Frame type="Image" name="ImageBoundCheck">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$this" pos="Min" offset="150"/>
      <Texture val="Assets\Textures\storm_ui_homescreenbackground_nexomania.dds"/>
      <RenderPriority val="999" />
      <Alpha val="90"/>
      <Unclipped val="True"/>
    </Frame> -->
    <Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanel">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      <PlayerId val="{$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
      <HeroesOnly val="False" />
      <AlwaysShowHero val="False" />
      <CheckPassengers val="True" />
      <AcceptsMouse val="False"/>
      <AcceptsMouseTooltip val="False"/>
      <RenderPriority val="513"/>
      <Frame type="UnitStatusFrame" name="UnitStatusFrame0">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <Frame type="UnitStatusColor" name="UnitColourFrame">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
          <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
          <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
          <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
          <ColorStyle val="TeamColors" />
        </Frame>
        <Frame type="UnitStatusBehaviorLabel" name="DeadLabel" template="SpazzoCustomTopBar/BehaviorDescriptionTemplate"/>
        <Frame type="UnitStatusBehaviorAnim" name="DeadDescription" template="SpazzoCustomTopBar/BehaviorAnimationTemplate" />
        <Frame type="Image" name="HealthBarBacking">
          <Anchor side="Top" relative="$parent" pos="Mid" offset="13" />
          <Anchor side="Left" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroBG" pos="Min" offset="2" />
          <Anchor side="Right" relative="$ancestor[@type=SelectionUnitStatusPanel]/$parent/HeroBG" pos="Max" offset="-3" />
          <Anchor side="Bottom" relative="$this" pos="Min" offset="9" />
          <Texture val="@UI/Spazzo/HealthBarBacking" />
          <TextureType val="Nineslice" />
          <Unclipped val="False"/>
          <AcceptsMouseTooltip val="False" />
          <AcceptsMouse val="False" />
          <Visible val="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}"/>
        </Frame>
        <Frame type="Image" name="ManaBarBacking">
          <Anchor side="Top" relative="$parent/HealthBarBacking" pos="Max" offset="0" />
          <Anchor side="Left" relative="$parent/HealthBarBacking" pos="Min" offset="0" />
          <Anchor side="Right" relative="$parent/HealthBarBacking" pos="Max" offset="0" />
          <Anchor side="Bottom" relative="$this" pos="Min" offset="7" />
          <Texture val="@UI/Spazzo/HealthBarBacking" />
          <TextureType val="Nineslice" />
          <Visible val="true" />
          <Unclipped val="False"/>
          <AcceptsMouseTooltip val="False" />
          <AcceptsMouse val="False" />
        </Frame>
        <Frame type="UnitStatusShieldedHealthBar" name="HealthBar">
          <Anchor side="Top" relative="$parent/HealthBarBacking" pos="Min" offset="1" />
          <Anchor side="Left" relative="$parent/HealthBarBacking" pos="Min" offset="1" />
          <Anchor side="Right" relative="$parent/HealthBarBacking" pos="Max" offset="-1" />
          <Anchor side="Bottom" relative="$parent/HealthBarBacking" pos="Max" offset="-1" />
          <Texture val="Assets/Textures/storm_ui_targetinfopanel_statusbar.dds" />
          <BarCount val="5" />
          <ColorStyle val="Primary" index="0" />
          <Tiled val="True" index="0" />
          <ApplyToTotal val="True" index="0" />
          <ColorStyle val="DoT" index="1" />
          <Tiled val="True" index="1" />
          <ReductionShown val="True" index="1" />
          <IncreaseDuration val="0" index="1" />
          <ApplyToTotal val="False" index="1" />
          <ColorStyle val="Shields" index="2" />
          <Tiled val="True" index="2" />
          <ReductionShown val="true" index="2" />
          <IncreaseDuration val="1000" index="2" />
          <DecreaseDuration val="2000" index="2" />
          <ApplyToTotal val="False" index="2" />
          <ReductionColor val="109, 255, 255" index="2" />
          <ColorStyle val="ShieldsDoT" index="3" />
          <Tiled val="True" index="3" />
          <ReductionShown val="True" index="3" />
          <IncreaseDuration val="0" index="3" />
          <ApplyToTotal val="False" index="3" />
          <ColorStyle val="HoT" index="4" />
          <Tiled val="True" index="4" />
          <ReductionShown val="true" index="4" />
          <IncreaseDuration val="0" index="4" />
          <ApplyToTotal val="False" index="4" />
          <Unclipped val="False"/>
          <AcceptsMouseTooltip val="False" />
          <AcceptsMouse val="False" />
          <BackgroundShown val="true" />
          <BackgroundColor val="125, 0, 0, 0" />
          <BarInsetRect top="0" left="0" bottom="0" right="0" />
          <BackgroundInsetRect top="0" left="0" bottom="0" right="0" />
        </Frame>
        <Frame type="UnitStatusShieldedHealthBar" name="FenixHealthBar">
          <Anchor side="Top" relative="$parent/HealthBar" pos="Min" offset="0" />
          <Anchor side="Left" relative="$parent/HealthBar" pos="Min" offset="0" />
          <Anchor side="Right" relative="$parent/HealthBar" pos="Max" offset="0" />
          <Anchor side="Bottom" relative="$parent/HealthBar" pos="Max" offset="0" />
          <Visible val="False"/>
          <Alpha val="0"/>
          <Texture val="Assets/Textures/storm_ui_targetinfopanel_statusbar.dds" />
          <BarCount val="3" />
          <ColorStyle val="Primary" index="0" />
          <DisplayFlags val="Health | HealthDoT | HoT" />
          <ApplyToTotal val="True" index="0" />
          <ReductionShown val="false" index="1" />
          <IncreaseDuration val="0" index="1" />
          <ColorStyle val="DoT" index="1" />
          <ApplyToTotal val="false" index="1" />
          <ReductionShown val="true" index="2" />
          <IncreaseDuration val="0" index="2" />
          <IncreaseDuration val="0" index="2" />
          <ColorStyle val="HoT" index="2" />
          <ApplyToTotal val="false" index="2" />
          <AcceptsMouseTooltip val="False" />
          <AcceptsMouse val="False" />
          <BackgroundShown val="true" />
          <BackgroundColor val="125, 0, 0, 0" />
          <BarInsetRect top="0" left="0" bottom="0" right="0" />
          <BackgroundInsetRect top="0" left="0" bottom="0" right="0" />
        </Frame>
        <Frame type="UnitStatusEnergyBar" name="EnergyBar">
          <Anchor side="Top" relative="$parent/ManaBarBacking" pos="Min" offset="1" />
          <Anchor side="Left" relative="$parent/ManaBarBacking" pos="Min" offset="1" />
          <Anchor side="Right" relative="$parent/ManaBarBacking" pos="Max" offset="-1" />
          <Anchor side="Bottom" relative="$parent/ManaBarBacking" pos="Max" offset="-1" />
          <Texture val="_Assets\UI\hud_bar_mana_base.dds" />
          <Tiled val="true" />
          <BarCount val="2" />
          <ColorStyle val="StandardEnergy" index="0" />
          <ColorStyle val="StandardEnergyGrant" index="1" />
          <ReductionShown val="true" index="1" />
          <IncreaseDuration val="0" index="1" />
          <ApplyToTotal val="false" index="1" />
          <Unclipped val="False"/>
          <AcceptsMouseTooltip val="False" />
          <AcceptsMouse val="False" />
          <PreserveAnchorOffset val="True" />
          <BackgroundShown val="true" />
          <BackgroundColor val="125, 0, 0, 0" />
          <BarInsetRect top="0" left="0" bottom="0" right="0" />
          <BackgroundInsetRect top="0" left="0" bottom="0" right="0" />
        </Frame>
        <Frame type="UnitStatusShieldedHealthBar" name="ShieldBar">
          <Anchor side="Top" relative="$parent/ManaBarBacking" pos="Min" offset="1" />
          <Anchor side="Left" relative="$parent/ManaBarBacking" pos="Min" offset="1" />
          <Anchor side="Right" relative="$parent/ManaBarBacking" pos="Max" offset="-1" />
          <Anchor side="Bottom" relative="$parent/ManaBarBacking" pos="Max" offset="-1" />
          <Visible val="False"/>
          <Alpha val="0"/>
          <Texture val="_Assets\UI\hud_bar_mana_base.dds" />
          <Tiled val="true" />
          <BarCount val="2" />
          <DisplayFlags val="Shields | ShieldsDoT" />
          <ColorStyle val="Shields" index="0" />
          <ColorStyle val="ShieldsDoT" index="1" />
          <Unclipped val="False"/>
          <AcceptsMouseTooltip val="False" />
          <AcceptsMouse val="False" />
          <SegmentValue val="250" />
          <SegmentGroupCount val="4" />
          <MaxSegmentCount val="400" />
          <PreserveAnchorOffset val="True" />
          <Segmented val="True" index="1" />
          <BackgroundShown val="true" />
          <BackgroundColor val="125, 0, 0, 0" />
          <BarInsetRect top="0" left="0" bottom="0" right="0" />
          <BackgroundInsetRect top="0" left="0" bottom="0" right="0" />
        </Frame>
        <!-- <Frame type="Image" name="ImageBoundCheck">
          <Anchor relative="$parent/UnitVehicleTrackerFrame/UnitTrackingElement/TrackedUnitStatusFrame0/UnitStatusContainedHeroIcon" />
          <Texture val="Assets\Textures\storm_ui_homescreenbackground_nexomania.dds"/>
          <RenderPriority val="999" />
          <Alpha val="90"/>
        </Frame> -->
        <Frame type="Frame" name="AbilityCooldownsContainerFrame" template="SpazzoCustomTopBarAbilities/AbilityCooldownContainerFrameTemplate">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
          <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
          <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
          <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
        </Frame>
        <Frame type="Frame" name="UnitVehicleTrackerFrame" template="SpazzoTemplates/VehicleTrackedUnitContainerFrame"/>
        <Frame type="Label" name="DeadMonitor">
          <Text val="False"/>
        </Frame>
        <!-- <Frame type="UnitTargetFrame" name="TargetHeroUnitFrame">
          <Anchor relative="$parent/$parent/PlayerHeroIconFrame" />
          <AcceptsMouse val="true" />
          <AllowTargeting val="false" />
          <AllowSelection val="true" />
          <AllowCameraCentering val="true" />
          <AllowSmartCommand val="false" />
          <AllowUnitClicks val="true" />
          <AllowCursorChanging val="true" />
        </Frame> -->
        <StateGroup name="CustomEnergyState">
          <DefaultState val="Vanilla"/>
          <State name="TLVRemove">
            <When type="Property" frame="$ancestor[@name=SelectionUnitStatusPanel]/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="Olaf">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <When type="Property" frame="$this" Unit="HeroOlaf"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="Baleog">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <When type="Property" frame="$this" Unit="HeroBaleog"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="Erik">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <When type="Property" frame="$this" Unit="HeroErik"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="OlafGravestone">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <When type="Property" frame="$this" Unit="OlafsGravestone"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="BaleogGravestone">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <When type="Property" frame="$this" Unit="BaleogsGravestone"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="ErikGravestone">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <When type="Property" frame="$this" Unit="EriksGravestone"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="LostVikingsController">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
            <When type="Property" frame="$this" Unit="HeroLostVikingsController"/>
            <Action type="SetProperty" frame="HealthBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Height="0" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" undo="false" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadLabel" Visible="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Enabled="False" undo="false" />
            <Action type="SetProperty" frame="DeadDescription" Visible="False" undo="false" />
          </State>
          <State name="DVaMechDead">
            <When type="Property" frame="$this" Unit="HeroDVaMech"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="DVaMech">
            <When type="Property" frame="$this" Unit="HeroDVaMech"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="DVaPilotDead">
            <When type="Property" frame="$this" Unit="HeroDVaPilot"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="DVaPilot">
            <When type="Property" frame="$this" Unit="HeroDVaPilot"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="ZaryaDead">
            <When type="Property" frame="$this" Unit="HeroZarya"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="25" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="Zarya">
            <When type="Property" frame="$this" Unit="HeroZarya"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="25" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="TracerDead">
            <When type="Property" frame="$this" Unit="HeroTracer"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="AmmoEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="2" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="Tracer">
            <When type="Property" frame="$this" Unit="HeroTracer"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="AmmoEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="2" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="HoggerDead">
            <When type="Property" frame="$this" Unit="HeroHogger"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="MeatEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Hogger">
            <When type="Property" frame="$this" Unit="HeroHogger"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="MeatEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="AurielDead">
            <When type="Property" frame="$this" Unit="HeroAuriel"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Auriel">
            <When type="Property" frame="$this" Unit="HeroAuriel"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="MoralesDead">
            <When type="Property" frame="$this" Unit="HeroMedic"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Morales">
            <When type="Property" frame="$this" Unit="HeroMedic"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="ChenDead">
            <When type="Property" frame="$this" Unit="HeroChen"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Chen">
            <When type="Property" frame="$this" Unit="HeroChen"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="ValeeraDead">
            <When type="Property" frame="$this" Unit="HeroValeera"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Valeera">
            <When type="Property" frame="$this" Unit="HeroValeera"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="BrewEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="SonyaDead">
            <When type="Property" frame="$this" Unit="HeroBarbarian"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="FuryEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Sonya">
            <When type="Property" frame="$this" Unit="HeroBarbarian"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="FuryEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="JunkratDead">
            <When type="Property" frame="$this" Unit="HeroJunkrat"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="FuryEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="1" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="Junkrat">
            <When type="Property" frame="$this" Unit="HeroJunkrat"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="FuryEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="1" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="GazloweDead">
            <When type="Property" frame="$this" Unit="HeroTinker"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="FuryEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="1" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="Gazlowe">
            <When type="Property" frame="$this" Unit="HeroTinker"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="FuryEnergy" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="1" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
          </State>
          <State name="DeathwingDead">
            <When type="Property" frame="$this" Unit="HeroDeathwing"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DeathwingEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Deathwing">
            <When type="Property" frame="$this" Unit="HeroDeathwing"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DeathwingEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="BigRag">
            <When type="Property" frame="$this" Unit="RagnarosBigRag"/>
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="AbathurDead">
            <When type="Property" frame="$this" Unit="HeroAbathur"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="Abathur">
            <When type="Property" frame="$this" Unit="HeroAbathur"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="AbathurSymbiote">
            <When type="Property" frame="$this" Unit="AbathurSymbiote"/>
            <Action type="SetProperty" frame="HealthBar" Visible="False" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="ChoDead">
            <When type="Property" frame="$this" Unit="HeroCho"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="Cho">
            <When type="Property" frame="$this" Unit="HeroCho"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="GallDead">
            <When type="Property" frame="$this" Unit="HeroGall"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="Gall">
            <When type="Property" frame="$this" Unit="HeroGall"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="MurkyDead">
            <When type="Property" frame="$this" Unit="HeroMurky"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="Murky">
            <When type="Property" frame="$this" Unit="HeroMurky"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="SamuroDead">
            <When type="Property" frame="$this" Unit="HeroSamuro"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="Samuro">
            <When type="Property" frame="$this" Unit="HeroSamuro"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="SamuroMirrorImage">
            <When type="Property" frame="$this" Unit="SamuroMirrorImage"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
          </State>
          <State name="DragonKnight">
            <When type="Property" frame="$this" Unit="VehicleDragon"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="TriglavProtector">
            <When type="Property" frame="$this" Unit="VolskayaVehicle"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="1" />
          </State>
          <State name="TriglavProtectorGunner">
            <When type="Property" frame="$this" Unit="VolskayaVehicleGunner"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="DivaEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="True" />
            <Action type="SetProperty" frame="EnergyBar" SegmentValue="1" />
          </State>
          <State name="Bunker">
            <When type="Property" frame="$this" Unit="FirebatBunkerDropTurretUnit"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="IllidanDead">
            <When type="Property" frame="$this" Unit="HeroIllidan"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Illidan">
            <When type="Property" frame="$this" Unit="HeroIllidan"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Dropship">
            <When type="Property" frame="$this" Unit="MedicMedivacDropship"/>
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="DeadFenix">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_fenix.dds"/>
            <When type="Property" frame="$this" Unit="HeroFenix"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" Visible="False" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="FenixHealthBar" Visible="True" />
            <Action type="SetProperty" frame="FenixHealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="FenixHealthBar" Alpha="70" />
            <Action type="SetProperty" frame="ShieldBar" Visible="True" />
            <Action type="SetProperty" frame="ShieldBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Fenix">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_fenix.dds"/>
            <When type="Property" frame="$this" Unit="HeroFenix"/>
            <Action type="SetProperty" frame="HealthBar" Visible="False" />
            <Action type="SetProperty" frame="HealthBar" Alpha="0" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="FenixHealthBar" Visible="True" />
            <Action type="SetProperty" frame="FenixHealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="FenixHealthBar" Alpha="255" />
            <Action type="SetProperty" frame="ShieldBar" Visible="True" />
            <Action type="SetProperty" frame="ShieldBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="DeadLeoric">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" operator="Equal" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_leoric.dds"/>
            <When type="Property" frame="$this" Unit="HeroLeoric"/>
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetAnchor" frame="HealthBarBacking" side="Bottom" relative="$this" pos="Min" offset="16" />
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllGray" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="0" />
            <Action type="SetProperty" frame="EnergyBar" Visible="False" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="VanillaDead">
            <When type="Property" frame="$this/DeadMonitor" Text="True"/>
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="HealthBar" ColorStyle="AllWhite" />
            <Action type="SetProperty" frame="HealthBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="70" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
          <State name="Vanilla">
            <Action type="SetProperty" frame="HealthBar" Visible="True" />
            <Action type="SetProperty" frame="ManaBarBacking" Visible="{$Talent0MasterSetting/ShowHealthBackings/CheckBoxButton/@Toggled}" />
            <Action type="SetProperty" frame="HealthBar" ColorStyle="Primary" />
            <Action type="SetProperty" frame="HealthBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Alpha="255" />
            <Action type="SetProperty" frame="EnergyBar" Visible="True" />
            <Action type="SetProperty" frame="EnergyBar" ColorStyle="StandardEnergy" />
            <Action type="SetProperty" frame="EnergyBar" Segmented="False" />
          </State>
        </StateGroup>
        <StateGroup name="HeroPortraitOverride">
          <DefaultState val="NoCustom"/>
          <State name="DVaMech">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_dva.dds"/>
            <When type="Property" frame="$this" Unit="HeroDVaMech"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_dvamech_fake.dds" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="VehicleGenericHeroInsideUnitTracker" />
          </State>
          <State name="DVaPilot">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_dva.dds"/>
            <When type="Property" frame="$this" Unit="HeroDVaPilot"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_dva.dds" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="VehicleGenericHeroInsideUnitTracker" />
          </State>
          <State name="Samuro">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_samuro.dds"/>
            <When type="Property" frame="$this" Unit="HeroSamuro"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="Assets/Textures/storm_ui_ingame_hero_loadingscreen_samuro.dds" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="VehicleGenericHeroInsideUnitTracker" />
          </State>
          <State name="SamuroMirrorImage">
            <When type="Property" frame="$parent/$parent/PlayerHeroIconFrame/HeroIconImage" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_samuro.dds"/>
            <When type="Property" frame="$this" Unit="SamuroMirrorImage"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_samuromirror_fake.dds" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="VehicleGenericHeroInsideUnitTracker" />
            <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/TrigGunnerIndicator" Visible="True" />
          </State>
          <State name="DragonKnight">
            <When type="Property" frame="$this" Unit="VehicleDragon"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_dk_fake.dds" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="VehicleGenericHeroInsideUnitTracker" />
          </State>
          <State name="TriglavProtectorPilot">
            <When type="Property" frame="$this" Unit="VolskayaVehicle"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_trig_fake.dds" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="VehicleGenericHeroInsideUnitTracker" />
          </State>
          <State name="TriglavProtectorGunner">
            <When type="Property" frame="$this" Unit="VolskayaVehicleGunner"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_triggun_fake.dds" />
            <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/TrigGunnerIndicator" Visible="True" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="VehicleGenericHeroInsideUnitTracker" />
            <!-- <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="AttachedVehicleGenericHeroInsideUnitTracker" /> -->
          </State>
          <State name="BlazeBunker">
            <When type="Property" frame="$this" Unit="FirebatBunkerDropTurretUnit"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_bunker_fake.dds" />
            <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="FirebatBunkerDropTurretPassengerUnitTracker" />
            <!-- <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/TrigGunnerIndicator" Visible="True" /> -->
          </State>
          <State name="Dropship">
            <When type="Property" frame="$this" Unit="MedicMedivacDropship"/>
            <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_medivac_fake.dds" />
            <!-- <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" Behavior="MedicMedivacUnitTracker" /> -->
            <!-- <Action type="SetProperty" frame="UnitVehicleTrackerFrame/UnitTrackingElement" ShowValidator="FirebatIsFirebatUnit" /> -->
            <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/TrigGunnerIndicator" Visible="True" />
          </State>
          <State name="MoltenCore">
            <When type="Property" frame="$this" Unit="RagnarosBigRag"/>
            <!-- <Action type="SetProperty" frame="$parent/$parent/PlayerHeroLoadingScreenImage" Texture="_Assets/UI/spaz_ui_bigrag_fake.dds" /> -->
            <Action type="SetProperty" frame="$parent/$parent/DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0/TrigGunnerIndicator" Visible="True" />
          </State>
          <State name="NoCustom">
          </State>
        </StateGroup>
      </Frame>
    </Frame>
    <Frame type="Frame" name="DummyAncestorRelationFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <RenderPriority val="517"/>
      <Frame type="Label" name="BottomPanelDetector">
        <Text val="False"/>
      </Frame>
      <Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanelTalentsFrame">
        <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Max" offset="0"/>
        <PlayerId val="{$ancestor[@name=DummyAncestorRelationFrame]/$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
        <HeroesOnly val="True" />
        <AlwaysShowHero val="True" />
        <CheckPassengers val="True" />
        <!-- <AllowObserverLocalSelection val="True" /> -->
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame0">
          <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Max" offset="0"/>
          <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent" pos="Max" offset="0"/>
          <AcceptsMouse val="False"/>
          <AcceptsMouseTooltip val="False"/>
          <RenderPriority val="999"/>
          <Frame type="Frame" name="HealingFountainCooldown" template="SpazzoCustomTopBar/HealingFountainCooldownTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Max" offset="0"/>
          </Frame>
          <Frame type="Frame" name="TrigGunnerIndicator">
            <Visible val="false"/>
            <StateGroup name="VehiclePassengerToggleStateGroup">
              <DefaultState val="Enabled"/>
              <State name="Ultracompact">
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="0" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="0" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="0" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="0" offset="0" />
              </State>
              <State name="EnabledCompact">
                <When type="Property" frame="$Talent0MasterSetting/ShowVehicleHP/CheckBoxButton" Toggled="True"/>
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/FarAnchor" pos="Min" offset="-35" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/CloseAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/FarAnchor" pos="Max" offset="-23" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/FarAnchor" pos="Max" offset="-23" />
              </State>
              <State name="Enabled">
                <When type="Property" frame="$Talent0MasterSetting/ShowVehicleHP/CheckBoxButton" Toggled="True"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/FarAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/FarAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/FarAnchor" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame/FarAnchor" pos="Max" offset="0" />
              </State>
              <State name="Disabled">
                <When type="Property" frame="$Talent0MasterSetting/ShowVehicleHP/CheckBoxButton" Toggled="False"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="0" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="0" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="0" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="0" offset="0" />
              </State>
            </StateGroup>
            <Frame type="UnitStatusMinimapIcon" name="UnitStatusContainedHeroIcon" template="SpazzoTemplates/VehicleTrackedUnitContainerFrame/UnitTrackingElement/TrackedUnitStatusFrame0/UnitStatusContainedHeroIcon">
              <Frame type="Image" name="BorderImage">
                <AdjustmentColor val="{$ancestor[@name=DummyAncestorRelationFrame]/$parent/PlayerColourFrame/@Color}" />
              </Frame>
            </Frame>
            <Frame type="UnitStatusShieldedHealthLabel" name="ContainedHeroHealthPercentLabel" template="SpazzoTemplates/VehicleTrackedUnitContainerFrame/UnitTrackingElement/TrackedUnitStatusFrame0/ContainedHeroHealthPercentLabel"/>
          </Frame>
          <Frame type="Frame" name="UnitMapMechanicCount" template="SpazzoTemplates/UnitMapMechanicContainerFrame">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-3"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Max" offset="0"/>
            <Anchor side="Right" relative="$this" pos="Min" offset="29"/>
            <Anchor side="Bottom" relative="$this" pos="Min" offset="29"/>
            <StateGroup name="AnchorStateGroup">
              <DefaultState val="FountainEnabled"/>
              <State name="CompactFountainEnabledSpaceAboveFountain">
                <When type="Property" frame="$Talent0MasterSetting/ShowFountain/CheckBoxButton" Toggled="True"/>
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
                <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
                <When type="Property" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" UseState="InUse"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame" operator="Equal" VehicleAnchorControl="4Abils"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-23" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="23" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="23" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="CMPAF" />
              </State>
              <State name="CompactFountainEnabledSpaceBesideFountain">
                <When type="Property" frame="$Talent0MasterSetting/ShowFountain/CheckBoxButton" Toggled="True"/>
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
                <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
                <When type="Property" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" UseState="InUse"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/AbilityCooldownsContainerFrame" operator="NotEqual" VehicleAnchorControl="4Abils"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-23" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="23" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="23" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="CMPBF" />
              </State>
              <State name="CompactFountainDisabled">
                <When type="Property" frame="$Talent0MasterSetting/ShowFountain/CheckBoxButton" Toggled="False"/>
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="23" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="23" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="CMPFD" />
              </State>
              <State name="CompactFountainEnabled">
                <When type="Property" frame="$Talent0MasterSetting/ShowFountain/CheckBoxButton" Toggled="True"/>
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-23" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="23" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="23" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="CMPFE" />
              </State>
              <State name="MinimalDeathwingL">
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" UseState="InUse"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/BaselineAnchor" LayoutState="DTCPL"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-23" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="23" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="23" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="DWLOB" />
              </State>
              <State name="MinimalDeathwingU">
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" UseState="InUse"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/BaselineAnchor" LayoutState="DTCPU"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-23" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="23" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="23" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="DWUOB" />
              </State>
              <State name="MinimalHeroicPresentNotIngress">
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" UseState="InUse"/>
                <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" operator="NotEqual" Toggled="True"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" pos="Min" offset="4" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" pos="Max" offset="2" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="25" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="25" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="UTCPHP" />
              </State>
              <State name="MinimalHeroicPresentIngress">
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" UseState="InUse"/>
                <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" operator="Equal" Toggled="True"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="3" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroBG" pos="Min" offset="6" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="25" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="25" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="UTCPHP2" />
              </State>
              <State name="MinimalHeroicNotPresent">
                <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroicAnchorFrame" operator="NotEqual" UseState="InUse"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="19" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroBG" pos="Min" offset="6" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="25" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="25" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="UTCPHNP" />
              </State>
              <State name="FountainEnabled">
                <When type="Property" frame="$Talent0MasterSetting/ShowFountain/CheckBoxButton" Toggled="True"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-3" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="DefFE" />
              </State>
              <State name="FountainDisabled">
                <When type="Property" frame="$Talent0MasterSetting/ShowFountain/CheckBoxButton" Toggled="False"/>
                <Action type="SetAnchor" frame="$this" side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="-3" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/FountainAnchor" pos="Min" offset="0" />
                <Action type="SetProperty" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/MapMechanicLabel" Text="DefFD" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="Frame" name="AbilityTalentsCooldownsContainerFrame" template="SpazzoCustomTopBarAbilities/AbilityCooldownTalentsContainerFrameTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame" pos="Max" offset="0"/>
            <Frame type="Frame" name="T1ControllerFrame">
              <Visible val="{$Talent1MasterSetting/ShowActives/CheckBoxButton/@Toggled}"/>
            </Frame>
            <Frame type="Frame" name="T2ControllerFrame">
              <Visible val="{$Talent2MasterSetting/ShowActives/CheckBoxButton/@Toggled}"/>
            </Frame>
            <Frame type="Frame" name="T3ControllerFrame">
              <Visible val="{$Talent3MasterSetting/ShowActives/CheckBoxButton/@Toggled}"/>
            </Frame>
            <Frame type="Frame" name="T4ControllerFrame">
              <Visible val="{$Talent4MasterSetting/ShowActives/CheckBoxButton/@Toggled}"/>
            </Frame>
            <Frame type="Frame" name="T5ControllerFrame">
              <Visible val="{$Talent5MasterSetting/ShowActives/CheckBoxButton/@Toggled}"/>
            </Frame>
            <Frame type="Frame" name="T6ControllerFrame">
              <Visible val="{$Talent6MasterSetting/ShowActives/CheckBoxButton/@Toggled}"/>
            </Frame>
            <Frame type="Frame" name="T7ControllerFrame">
              <Visible val="{$Talent7MasterSetting/ShowActives/CheckBoxButton/@Toggled}"/>
            </Frame>
          </Frame>
          <Frame type="UnitStatusValidatorAnimElement" name="BaselineActiveValidatorFrame">
            <Anchor relative="$parent" />
            <Validator val="SourceIsSieged" />
            <Validator val="GallHasOgreRageSpellDamageBuff" />
            <Validator val="ChoHasOgreHideArmorBuff" />
            <Validator val="ZuljinBerserkerCasterHasBerserkerBuff" />
            <StateGroup name="AnimState">
              <DefaultState val="NoState" />
              <State name="NoState">
                <When type="AnimationState" UnitStatusValidatorState="NoState" />
              </State>
              <State name="SourceIsSieged">
                <When type="AnimationState" UnitStatusValidatorState="SourceIsSieged" />
              </State>
              <State name="GallHasOgreRageSpellDamageBuff">
                <When type="AnimationState" UnitStatusValidatorState="GallHasOgreRageSpellDamageBuff" />
              </State>
              <State name="ChoHasOgreHideArmorBuff">
                <When type="AnimationState" UnitStatusValidatorState="ChoHasOgreHideArmorBuff" />
              </State>
              <State name="ZuljinBerserkerCasterHasBerserkerBuff">
                <When type="AnimationState" UnitStatusValidatorState="ZuljinBerserkerCasterHasBerserkerBuff" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="UnitStatusDummyBehaviorCount">
            <Anchor relative="$parent" />
            <AcceptsMouse val="false" />
            <AcceptsMouseTooltip val="false" />
            <Behavior val="HeroDummyVeterancy" />
            <MinStackCountDisplayed val="0"/>
            <Frame type="BehaviorIcon" name="BehaviorIcon">
              <Anchor relative="$parent" />
              <AcceptsMouse val="false" />
              <AcceptsMouseTooltip val="false" />
              <MinStackCountDisplayed val="0"/>
            </Frame>
          </Frame>
          <Frame type="Frame" name="QuestStackCounterT0" template="SpazzoCustomTopBarQuests/BaselineQuestContainerFrameTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/BaselineAnchor" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/BaselineAnchor" pos="Min" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/BaselineAnchor" pos="Max" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/BaselineAnchor" pos="Max" offset="0"/>
            <Frame type="UnitStatusBehaviorIcon" name="UnitStatusBehaviorIconBaselineQuest">
              <Frame type="BehaviorIcon" name="BehaviorIcon">
                <Frame type="Label" name="StackLabel">
                  <Anchor side="Left" relative="$parent" pos="Min" offset="-3" />
                  <Anchor side="Right" relative="$parent" pos="Max" offset="3" />
                  <!-- <Width val="30"/> -->
                </Frame>
              </Frame>
            </Frame>
          </Frame>
          <Frame type="Label" name="T0LabelDummy">
            <Anchor relative="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest/BehaviorIcon/StackLabel"/>
            <SnapToDevicePixels val="true"/>
            <Style val="{$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest/BehaviorIcon/StackLabel/@Style}" />
            <Options val="ScaleToPreventTruncation" />
            <AcceptsMouse val="false" />
            <Text val="0"/>
            <Visible val="True"/>
            <StateGroup name="TalentState">
              <DefaultState val="NoState" />
              <State name="TalentHasZero">
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" BaselineType="DoesNotHaveTokenHasDurationDoesNotHaveAbilityDoesNotHaveCharge" operator="NotEqual" />
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" BaselineType="DoesNotHaveTokenDoesNotHaveDurationHasAbilityDoesNotHaveCharge" operator="NotEqual" />
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" BaselineType="DoesNotHaveTokenDoesNotHaveDurationDoesNotHaveAbilityDoesHaveCharge" operator="NotEqual" />
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" BaselineType="DoesNotHaveTokenDoesHaveDurationHasAbilityDoesNotHaveCharge" operator="NotEqual" />
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" BaselineType="DoesNotHaveTokenDoesNotHaveDurationDoesNotHaveAbilityDoesNotHaveCharge" operator="NotEqual" />
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" BaselineType="DoesNotHaveTokenDoesNotHaveDurationDoesHaveAbilityDoesHaveCharge" operator="NotEqual" />
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" BaselineType="HasNone" operator="NotEqual" />
                <When type="Property" frame="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest" InheritedVisible="false" operator="Equal" />
                <Action type="SetProperty" frame="$this" Text="0" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="ThrallOneOverride">
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" T0TalentState="Thrall" operator="Equal" />
                <When type="Property" frame="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest" InheritedVisible="true" operator="Equal" />
                <When type="Property" frame="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest/BehaviorIcon" CurrentStackCount="1" operator="Equal" />
                <Action type="SetProperty" frame="$this" Text="1" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="OrpheaOneOverride">
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" T0TalentState="Orphea" operator="Equal" />
                <When type="Property" frame="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest" InheritedVisible="true" operator="Equal" />
                <When type="Property" frame="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest/BehaviorIcon" CurrentStackCount="1" operator="Equal" />
                <Action type="SetProperty" frame="$this" Text="1" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="VallaOneOverride">
                <When type="StateGroup" frame="$parent/QuestStackCounterT0" T0TalentState="Valla" operator="Equal" />
                <When type="Property" frame="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest" InheritedVisible="true" operator="Equal" />
                <When type="Property" frame="$parent/QuestStackCounterT0/UnitStatusBehaviorIconBaselineQuest/BehaviorIcon" CurrentStackCount="1" operator="Equal" />
                <Action type="SetProperty" frame="$this" Text="1" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="NoState">
                <Action type="SetProperty" frame="$this" Visible="False" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="QuestStackCounterT1" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Max" offset="0"/>
            <Frame type="Frame" name="StateControllerFrame" template="SpazzoCustomTopBarQuests/StateControllerFrameT1"/>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="LoanStackCounterT1" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorLoanIconTemplate">
            <Anchor side="Top" relative="$parent/QuestStackCounterT1" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$parent/QuestStackCounterT1" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$parent/QuestStackCounterT1" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$parent/QuestStackCounterT1" pos="Max" offset="0"/>
          </Frame>
          <Frame type="Image" name="LoanStackProgressBarDummyT1">
            <Anchor relative="$INVALID" />
            <Texture val="_Assets\UI\spaz_ui_talentborder_newer_quest.dds" />
            <AdjustmentColor val="255,210,23,23" /> 
            <Alpha val="130" /> 
            <ColorAdjustMode val="Fill" /> 
            <AcceptsMouse val="false" />
            <StateGroup name="LoanState">
              <DefaultState val="IsNotLoanTalent" />
              <State name="IsNotLoanTalent">
              </State>
              <State name="IsLoanTalent">
              </State>
            </StateGroup>
            <StateGroup name="VisibleState">
              <DefaultState val="NoTalentSelected" />
              <State name="NoTalentSelected">
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" TextureState="TierSelected" operator="NotEqual"/>
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
                <!-- <Action type="SetProperty" frame="$parent/LoanDebugT1" Text="T1" /> -->
              </State>
              <State name="NoTalent">
                <When type="StateGroup" frame="$parent/QuestStackCounterT1/StateControllerFrame" T1TalentState="NoState" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
                <!-- <Action type="SetProperty" frame="$parent/LoanDebugT1" Text="T2" /> -->
              </State>
              <State name="NoLoanTalent">
                <When type="Property" frame="$parent/LoanStackCounterT1" Behavior="NULL" />
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
                <!-- <Action type="SetProperty" frame="$parent/LoanDebugT1" Text="T3" /> -->
              </State>
              <State name="LoanTalentNotLost">
                <When type="Property" frame="$parent/LoanStackCounterT1" Behavior="NULL" operator="NotEqual" />
                <When type="Property" frame="$parent/LoanStackCounterT1" CurrentStackCount="0" operator="NotEqual" />
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
                <!-- <Action type="SetProperty" frame="$parent/LoanDebugT1" Text="T4" /> -->
              </State>
              <State name="LoanTalentLost2">
                <When type="Property" frame="$parent/LoanStackCounterT1" Behavior="NULL" operator="NotEqual" />
                <When type="Property" frame="$parent/LoanStackCounterT1" InheritedVisible="False" operator="Equal" />
                <When type="StateGroup" frame="$this" LoanState="IsLoanTalent" operator="Equal"/>
                <Action type="SetProperty" frame="$this" Visible="True" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/LoanStackCounterT1" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/LoanStackCounterT1" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/LoanStackCounterT1" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/LoanStackCounterT1" pos="Max" offset="0" />
                <!-- <Action type="SetProperty" frame="$parent/LoanDebugT1" Text="T5" /> -->
              </State>
            </StateGroup>
          </Frame>
          <Frame type="Label" name="T1LabelDummy">
            <Anchor relative="$parent/QuestStackCounterT1/BehaviorIcon/StackLabel"/>
            <SnapToDevicePixels val="true"/>
            <Style val="Spazzo_TopPanelQuestLabel" />
            <Style val="{$parent/QuestStackCounterT1/BehaviorIcon/StackLabel/@Style}" />
            <Options val="ScaleToPreventTruncation" />
            <AcceptsMouse val="false" />
            <Text val="0"/>
            <Visible val="True"/>
            <StateGroup name="TalentState">
              <DefaultState val="NoState" />
              <State name="TalentHasZero">
                <When type="StateGroup" frame="$parent/QuestStackCounterT1/StateControllerFrame" T1TalentState="NoState" operator="NotEqual" />
                <When type="Property" frame="$parent/QuestStackCounterT1" InheritedVisible="false" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="NoState">
                <Action type="SetProperty" frame="$this" Visible="False" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="Frame" name="QuestAndBuffContainerFrameT2">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Max" offset="0"/>
            <Frame type="UnitStatusBehaviorIcon" name="QuestStackCounterT2" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconTemplate">
              <Anchor relative="$parent"/>
            </Frame>
            <Frame type="UnitStatusBehaviorIcon" name="BuffDurationT2" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconDurationTemplate">
              <Anchor relative="$parent"/>
            </Frame>
            <Frame type="Label" name="T2LabelDummy">
              <Anchor relative="$parent/QuestStackCounterT2/BehaviorIcon/StackLabel"/>
              <SnapToDevicePixels val="true"/>
              <Style val="{$parent/QuestStackCounterT2/BehaviorIcon/StackLabel/@Style}" />
              <Options val="ScaleToPreventTruncation" />
              <AcceptsMouse val="false" />
              <Text val="0"/>
              <Visible val="True"/>
              <StateGroup name="TalentState">
                <DefaultState val="NoState" />
                <State name="TalentHasZeroAndUsesTokens">
                  <When type="StateGroup" frame="$parent/StateControllerFrame" UsesTokens="True" />
                  <When type="Property" frame="$parent/QuestStackCounterT2" operator="Equal" InheritedVisible="false" />
                  <Action type="SetProperty" frame="$this" Visible="True" />
                </State>
                <State name="NoState">
                  <Action type="SetProperty" frame="$this" Visible="False" />
                </State>
              </StateGroup>
            </Frame>
            <Frame type="Frame" name="StateControllerFrame" template="SpazzoCustomTopBarQuests/StateControllerFrameT2"/>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="QuestStackCounterT3" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Max" offset="0"/>
            <Frame type="Frame" name="StateControllerFrame" template="SpazzoCustomTopBarQuests/StateControllerFrameT3"/>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="LoanStackCounterT3" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorLoanIconTemplate">
            <Anchor side="Top" relative="$parent/QuestStackCounterT3" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$parent/QuestStackCounterT3" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$parent/QuestStackCounterT3" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$parent/QuestStackCounterT3" pos="Max" offset="0"/>
          </Frame>
          <Frame type="Image" name="LoanStackProgressBarDummyT3">
            <Anchor relative="$INVALID" />
            <Texture val="_Assets\UI\spaz_ui_talentborder_newer_quest.dds" />
            <AdjustmentColor val="255,210,23,23" /> 
            <Alpha val="130" /> 
            <ColorAdjustMode val="Fill" /> 
            <AcceptsMouse val="false" />
            <StateGroup name="LoanState">
              <DefaultState val="IsNotLoanTalent" />
              <State name="IsNotLoanTalent">
              </State>
              <State name="IsLoanTalent">
              </State>
            </StateGroup>
            <StateGroup name="VisibleState">
              <DefaultState val="NoTalentSelected" />
              <State name="NoTalentSelected">
                <When type="StateGroup" frame="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" TextureState="TierSelected" operator="NotEqual"/>
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
              </State>
              <State name="NoTalent">
                <When type="StateGroup" frame="$parent/QuestStackCounterT3/StateControllerFrame" T3TalentState="NoState" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
              </State>
              <State name="NoLoanTalent">
                <When type="Property" frame="$parent/LoanStackCounterT3" Behavior="NULL" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
              </State>
              <State name="LoanTalentNotLost">
                <When type="Property" frame="$parent/LoanStackCounterT3" Behavior="NULL" operator="NotEqual" />
                <When type="Property" frame="$parent/LoanStackCounterT3" CurrentStackCount="0" operator="NotEqual" />
                <Action type="SetProperty" frame="$this" Visible="False" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$INVALID" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$INVALID" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$INVALID" pos="Max" offset="0" />
              </State>
              <State name="LoanTalentLost2">
                <When type="Property" frame="$parent/LoanStackCounterT3" Behavior="NULL" operator="NotEqual" />
                <When type="Property" frame="$parent/LoanStackCounterT3" InheritedVisible="False" operator="Equal" />
                <When type="StateGroup" frame="$this" LoanState="IsLoanTalent" operator="Equal"/>
                <Action type="SetProperty" frame="$this" Visible="True" />
                <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/LoanStackCounterT3" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Left" relative="$parent/LoanStackCounterT3" pos="Min" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Right" relative="$parent/LoanStackCounterT3" pos="Max" offset="0" />
                <Action type="SetAnchor" frame="$this" side="Bottom" relative="$parent/LoanStackCounterT3" pos="Max" offset="0" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="Label" name="T3LabelDummy">
            <Anchor relative="$parent/QuestStackCounterT3/BehaviorIcon/StackLabel"/>
            <SnapToDevicePixels val="true"/>
            <Style val="{$parent/QuestStackCounterT3/BehaviorIcon/StackLabel/@Style}" />
            <Options val="ScaleToPreventTruncation" />
            <AcceptsMouse val="false" />
            <Text val="0"/>
            <Visible val="True"/>
            <StateGroup name="TalentState">
              <DefaultState val="NoState" />
              <State name="TalentHasZero">
                <When type="StateGroup" frame="$parent/QuestStackCounterT3/StateControllerFrame" T3TalentState="NoState" operator="NotEqual" />
                <When type="Property" frame="$parent/QuestStackCounterT3" InheritedVisible="false" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="NoState">
                <Action type="SetProperty" frame="$this" Visible="False" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="Frame" name="QuestAndBuffContainerFrameT4">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Max" offset="0"/>
            <Frame type="UnitStatusBehaviorIcon" name="QuestStackCounterT4" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconTemplate">
              <Anchor relative="$parent"/>
            </Frame>
            <Frame type="UnitStatusBehaviorIcon" name="BuffDurationT4" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconDurationTemplate">
              <Anchor relative="$parent"/>
            </Frame>
            <Frame type="UnitStatusValidatorAnimElement" name="HeroicActiveValidatorFrame">
              <Anchor relative="$parent" />
              <Validator val="HasTassadarArchon" />
              <Validator val="HasTassadarTwilightArchonBehavior" />
              <Validator val="AbathurHasActiveMonstrosity" />
              <Validator val="AnaHaveEyeOfHorus" />
              <Validator val="ChenHasStormEarthFireCasterBehavior" />
              <Validator val="GenjiCasterHasDragonbladeActive" />
              <StateGroup name="AnimState">
                <DefaultState val="NoState" />
                <State name="NoState">
                  <When type="AnimationState" UnitStatusValidatorState="NoState" />
                </State>
                <State name="HasTassadarArchon">
                  <When type="AnimationState" UnitStatusValidatorState="HasTassadarArchon" />
                </State>
                <State name="HasTassadarTwilightArchonBehavior">
                  <When type="AnimationState" UnitStatusValidatorState="HasTassadarTwilightArchonBehavior" />
                </State>
                <State name="AbathurHasActiveMonstrosity">
                  <When type="AnimationState" UnitStatusValidatorState="AbathurHasActiveMonstrosity" />
                </State>
                <State name="AnaHaveEyeOfHorus">
                  <When type="AnimationState" UnitStatusValidatorState="AnaHaveEyeOfHorus" />
                </State>
                <State name="ChenHasStormEarthFireCasterBehavior">
                  <When type="AnimationState" UnitStatusValidatorState="ChenHasStormEarthFireCasterBehavior" />
                </State>
                <State name="GenjiCasterHasDragonbladeActive">
                  <When type="AnimationState" UnitStatusValidatorState="GenjiCasterHasDragonbladeActive" />
                </State>
              </StateGroup>
            </Frame>
            <Frame type="Frame" name="StateControllerFrame" template="SpazzoCustomTopBarQuests/StateControllerFrameT4"/>
            <Frame type="Label" name="T4LabelDummy">
              <Anchor relative="$parent/QuestStackCounterT4/BehaviorIcon/StackLabel"/>
              <SnapToDevicePixels val="true"/>
              <Style val="{$parent/QuestStackCounterT4/BehaviorIcon/StackLabel/@Style}" />
              <Options val="ScaleToPreventTruncation" />
              <AcceptsMouse val="false" />
              <Text val="0"/>
              <Visible val="True"/>
              <StateGroup name="TalentState">
                <DefaultState val="NoState" />
                <State name="TalentHasZeroAndUsesTokens">
                  <When type="StateGroup" frame="$parent/StateControllerFrame" UsesTokens="True" />
                  <When type="Property" frame="$parent/QuestStackCounterT4" operator="Equal" InheritedVisible="false" />
                  <Action type="SetProperty" frame="$this" Visible="True" />
                </State>
                <State name="NoState">
                  <Action type="SetProperty" frame="$this" Visible="False" />
                </State>
              </StateGroup>
            </Frame>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="QuestStackCounterT5" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Max" offset="0"/>
            <Frame type="Frame" name="StateControllerFrame" template="SpazzoCustomTopBarQuests/StateControllerFrameT5"/>
          </Frame>
          <Frame type="Label" name="T5LabelDummy">
            <Anchor relative="$parent/QuestStackCounterT5/BehaviorIcon/StackLabel"/>
            <SnapToDevicePixels val="true"/>
            <Style val="{$parent/QuestStackCounterT5/BehaviorIcon/StackLabel/@Style}" />
            <Options val="ScaleToPreventTruncation" />
            <AcceptsMouse val="false" />
            <Text val="0"/>
            <Visible val="True"/>
            <StateGroup name="TalentState">
              <DefaultState val="NoState" />
              <State name="TalentHasZero">
                <When type="StateGroup" frame="$parent/QuestStackCounterT5/StateControllerFrame" T5TalentState="NoState" operator="NotEqual" />
                <When type="Property" frame="$parent/QuestStackCounterT5" InheritedVisible="false" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="NoState">
                <Action type="SetProperty" frame="$this" Visible="False" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="QuestStackCounterT6" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Max" offset="0"/>
            <Frame type="Frame" name="StateControllerFrame" template="SpazzoCustomTopBarQuests/StateControllerFrameT6"/>
          </Frame>
          <Frame type="Label" name="T6LabelDummy">
            <Anchor relative="$parent/QuestStackCounterT6/BehaviorIcon/StackLabel"/>
            <SnapToDevicePixels val="true"/>
            <Style val="{$parent/QuestStackCounterT6/BehaviorIcon/StackLabel/@Style}" />
            <Options val="ScaleToPreventTruncation" />
            <AcceptsMouse val="false" />
            <Text val="0"/>
            <Visible val="True"/>
            <StateGroup name="TalentState">
              <DefaultState val="NoState" />
              <State name="TalentHasZero">
                <When type="StateGroup" frame="$parent/QuestStackCounterT6/StateControllerFrame" T6TalentState="NoState" operator="NotEqual" />
                <When type="Property" frame="$parent/QuestStackCounterT6" InheritedVisible="false" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="NoState">
                <Action type="SetProperty" frame="$this" Visible="False" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="UnitStatusBehaviorIcon" name="QuestStackCounterT7" template="SpazzoCustomTopBarQuests/UnitStatusBehaviorIconTemplate">
            <Anchor side="Top" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$ancestor[@name=DummyAncestorRelationFrame]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Max" offset="0"/>
            <Frame type="Frame" name="StateControllerFrame" template="SpazzoCustomTopBarQuests/StateControllerFrameT7"/>
          </Frame>
          <Frame type="Label" name="T7LabelDummy">
            <Anchor relative="$parent/QuestStackCounterT7/BehaviorIcon/StackLabel"/>
            <SnapToDevicePixels val="true"/>
            <Style val="{$parent/QuestStackCounterT7/BehaviorIcon/StackLabel/@Style}" />
            <Options val="ScaleToPreventTruncation" />
            <AcceptsMouse val="false" />
            <Text val="0"/>
            <Visible val="True"/>
            <StateGroup name="TalentState">
              <DefaultState val="NoState" />
              <State name="TalentHasZero">
                <When type="StateGroup" frame="$parent/QuestStackCounterT7/StateControllerFrame" T7TalentState="NoState" operator="NotEqual" />
                <When type="Property" frame="$parent/QuestStackCounterT7" InheritedVisible="false" operator="Equal" />
                <Action type="SetProperty" frame="$this" Visible="True" />
              </State>
              <State name="NoState">
                <Action type="SetProperty" frame="$this" Visible="False" />
              </State>
            </StateGroup>
          </Frame>
          <Frame type="Frame" name="T1QuestControllerFrame">
            <Visible val="{$Talent1MasterSetting/ShowQuests/CheckBoxButton/@Toggled}"/>
          </Frame>
          <Frame type="Frame" name="T2QuestControllerFrame">
            <Visible val="{$Talent2MasterSetting/ShowQuests/CheckBoxButton/@Toggled}"/>
          </Frame>
          <Frame type="Frame" name="T3QuestControllerFrame">
            <Visible val="{$Talent3MasterSetting/ShowQuests/CheckBoxButton/@Toggled}"/>
          </Frame>
          <Frame type="Frame" name="T4QuestControllerFrame">
            <Visible val="{$Talent4MasterSetting/ShowQuests/CheckBoxButton/@Toggled}"/>
          </Frame>
          <Frame type="Frame" name="T5QuestControllerFrame">
            <Visible val="{$Talent5MasterSetting/ShowQuests/CheckBoxButton/@Toggled}"/>
          </Frame>
          <Frame type="Frame" name="T6QuestControllerFrame">
            <Visible val="{$Talent6MasterSetting/ShowQuests/CheckBoxButton/@Toggled}"/>
          </Frame>
          <Frame type="Frame" name="T7QuestControllerFrame">
            <Visible val="{$Talent7MasterSetting/ShowQuests/CheckBoxButton/@Toggled}"/>
          </Frame>
          <Frame type="Label" name="SamuroRexxarContainerFrame" template="SpazzoTemplates/SamuroRexxarTrackedSubUnitsFrame">
            <Anchor side="Top" relative="$parent/QuestStackCounterT0" pos="Min" offset="0"/>
            <Anchor side="Left" relative="$parent/QuestStackCounterT0" pos="Min" offset="0"/>
            <Anchor side="Right" relative="$parent/QuestStackCounterT0" pos="Max" offset="0"/>
            <Anchor side="Bottom" relative="$parent/QuestStackCounterT0" pos="Max" offset="0"/>
          </Frame>
        </Frame>
      </Frame>
    </Frame>
    <Frame type="Frame" name="HeroSpecificOverrideTemplaterFrame">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
      <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
      <Visible val="False"/>
      <BatchImages val="True"/>
      <BatchText val="True" />
      <Batch val="True"/>
      <Frame type="Image" name="OlafHealthBarBacking" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking">
        <Anchor side="Top" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0" />
        <Anchor side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
        <Anchor side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
        <RenderPriority val="513"/>
        <Visible val="False"/>
        <StateGroup name="Size">
          <DefaultState val="Default"/>
          <State name="WIIDE">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0" />
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetWIDE" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetWIDE" />
          </State>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0" />
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetUltracompact" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetUltracompact" />
          </State>
          <State name="Compact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="-24" />
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetCompact" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetCompact" />
          </State>
          <State name="Ingress">
            <When type="StateGroup" frame="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0" />
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetIngress" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
          <State name="IngressNoHeroicInUse">
            <When type="StateGroup" frame="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0" />
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/$parent/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking" pos="Min" offset="0" />
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="BaleogHealthBarBacking" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking">
        <Anchor side="Top" relative="$parent/OlafHealthBarBacking" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/OlafHealthBarBacking" pos="Max" offset="0" />
        <Anchor side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
        <Anchor side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
        <RenderPriority val="513"/>
        <Visible val="False"/>
        <StateGroup name="Size">
          <DefaultState val="Default"/>
          <State name="WIIDE">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetWIDE" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetWIDE" />
          </State>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetUltracompact" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetUltracompact" />
          </State>
          <State name="Compact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetCompact" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetCompact" />
          </State>
          <State name="Ingress">
            <When type="StateGroup" frame="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetIngress" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
          <State name="IngressNoHeroicInUse">
            <When type="StateGroup" frame="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="ErikHealthBarBacking" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBarBacking">
        <Anchor side="Top" relative="$parent/BaleogHealthBarBacking" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/BaleogHealthBarBacking" pos="Max" offset="0" />
        <Anchor side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
        <Anchor side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
        <RenderPriority val="513"/>
        <Visible val="False"/>
        <StateGroup name="Size">
          <DefaultState val="Default"/>
          <State name="WIIDE">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetWIDE" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetWIDE" />
          </State>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetUltracompact" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetUltracompact" />
          </State>
          <State name="Compact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetCompact" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffsetCompact" />
          </State>
          <State name="Ingress">
            <When type="StateGroup" frame="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/HeroicAnchorFrame" operator="Equal" UseState="InUse"/>
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffsetIngress" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
          <State name="IngressNoHeroicInUse">
            <When type="StateGroup" frame="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="1"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="0"/>
            <Action type="SetAnchor" frame="$this" side="Right" relative="$this" pos="Min" offset="#TLVHealthBarRightOffset" />
            <Action type="SetAnchor" frame="$this" side="Bottom" relative="$this" pos="Min" offset="#TLVHealthBarBottomOffset" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="OlafIndicatorIcon">
        <Anchor side="Right" relative="$parent/OlafHealthBarBacking" pos="Max" offset="#TLVIconOffset" />
        <Anchor side="Bottom" relative="$parent/OlafHealthBarBacking" pos="Max" offset="#TLVIconOffset" />
        <Height val="#TLVIconSize"/>
        <Width val="#TLVIconSize"/>
        <Texture val="Assets\Textures\storm_ui_hud_heromechanic_vikings_shield_small_off.dds"/>
        <RenderPriority val="515"/>
        <Visible val="{$parent/OlafHealthBarBacking/@Visible}"/>
        <StateGroup name="Size">
          <DefaultState val="Default"/>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetProperty" frame="$this" Height="#TLVIconSizeUltracompact" />
            <Action type="SetProperty" frame="$this" Width="#TLVIconSizeUltracompact" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
            <Action type="SetProperty" frame="$this" Height="#TLVIconSize" />
            <Action type="SetProperty" frame="$this" Width="#TLVIconSize" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="BaleogIndicatorIcon">
        <Anchor side="Right" relative="$parent/BaleogHealthBarBacking" pos="Max" offset="#TLVIconOffset" />
        <Anchor side="Bottom" relative="$parent/BaleogHealthBarBacking" pos="Max" offset="#TLVIconOffset" />
        <Height val="#TLVIconSize"/>
        <Width val="#TLVIconSize"/>
        <Texture val="Assets\Textures\storm_ui_hud_heromechanic_vikings_sword_small_off.dds"/>
        <RenderPriority val="515"/>
        <Visible val="{$parent/BaleogHealthBarBacking/@Visible}"/>
        <StateGroup name="Size">
          <DefaultState val="Default"/>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetProperty" frame="$this" Height="#TLVIconSizeUltracompact" />
            <Action type="SetProperty" frame="$this" Width="#TLVIconSizeUltracompact" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
            <Action type="SetProperty" frame="$this" Height="#TLVIconSize" />
            <Action type="SetProperty" frame="$this" Width="#TLVIconSize" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="ErikIndicatorIcon">
        <Anchor side="Right" relative="$parent/ErikHealthBarBacking" pos="Max" offset="#TLVIconOffset" />
        <Anchor side="Bottom" relative="$parent/ErikHealthBarBacking" pos="Max" offset="#TLVIconOffset" />
        <Height val="#TLVIconSize"/>
        <Width val="#TLVIconSize"/>
        <Texture val="Assets\Textures\storm_ui_hud_heromechanic_vikings_boot_small_off.dds"/>
        <RenderPriority val="515"/>
        <Visible val="{$parent/ErikHealthBarBacking/@Visible}"/>
        <StateGroup name="Size">
          <DefaultState val="Default"/>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetProperty" frame="$this" Height="#TLVIconSizeUltracompact" />
            <Action type="SetProperty" frame="$this" Width="#TLVIconSizeUltracompact" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
            <Action type="SetProperty" frame="$this" Height="#TLVIconSize" />
            <Action type="SetProperty" frame="$this" Width="#TLVIconSize" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Label" name="OlafDeathTimerLabel">
        <Anchor side="Top" relative="$parent/OlafHealthBarBacking" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/OlafHealthBarBacking" pos="Min" offset="1" />
        <Style val="Spazzo_TopPanelVikingDeathLabel"/>
        <Color val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="515"/>
        <StateGroup name="Position">
          <DefaultState val="Default"/>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/OlafHealthBarBacking" pos="Min" offset="-1" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/OlafHealthBarBacking" pos="Min" offset="-1" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Label" name="BaleogDeathTimerLabel">
        <Anchor side="Top" relative="$parent/BaleogHealthBarBacking" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/BaleogHealthBarBacking" pos="Min" offset="1" />
        <Style val="Spazzo_TopPanelVikingDeathLabel"/>
        <Color val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="515"/>
        <StateGroup name="Position">
          <DefaultState val="Default"/>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/BaleogHealthBarBacking" pos="Min" offset="-1" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/BaleogHealthBarBacking" pos="Min" offset="-1" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Label" name="ErikDeathTimerLabel">
        <Anchor side="Top" relative="$parent/ErikHealthBarBacking" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/ErikHealthBarBacking" pos="Min" offset="1" />
        <Style val="Spazzo_TopPanelVikingDeathLabel"/>
        <Color val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="515"/>
        <StateGroup name="Position">
          <DefaultState val="Default"/>
          <State name="Ultracompact">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/ErikHealthBarBacking" pos="Min" offset="-1" />
          </State>
          <State name="Default">
            <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
            <Action type="SetAnchor" frame="$this" side="Top" relative="$parent/ErikHealthBarBacking" pos="Min" offset="-1" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="SelectionUnitStatusPanel" name="OlafPanel">
        <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <PlayerId val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
        <HeroesOnly val="False" />
        <AlwaysShowHero val="False" />
        <SpecificUnit val="HeroOlaf"/>
        <CheckPassengers val="True" />
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <RenderPriority val="514"/>
        <Visible val="{$parent/OlafHealthBarBacking/@Visible}"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame0">
          <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
          <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
          <AcceptsMouse val="False"/>
          <AcceptsMouseTooltip val="False"/>
          <Persistent val="true" />
          <Frame type="UnitStatusShieldedHealthBar" name="HealthBar" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBar">
            <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/OlafHealthBarBacking" pos="Min" offset="1" />
            <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/OlafHealthBarBacking" pos="Min" offset="1" />
            <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/OlafHealthBarBacking" pos="Max" offset="-1" />
            <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/OlafHealthBarBacking" pos="Max" offset="-1" />
            <Expansion val="Up" />
          </Frame>
        </Frame>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame1" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/OlafPanel/UnitStatusFrame0"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame2" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/OlafPanel/UnitStatusFrame0"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame3" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/OlafPanel/UnitStatusFrame0"/>
      </Frame>
      <Frame type="SelectionUnitStatusPanel" name="BaleogPanel">
        <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <PlayerId val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
        <HeroesOnly val="False" />
        <AlwaysShowHero val="False" />
        <CheckPassengers val="True" />
        <SpecificUnit val="HeroBaleog"/>
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <RenderPriority val="514"/>
        <Visible val="{$parent/BaleogHealthBarBacking/@Visible}"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame0">
          <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
          <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
          <AcceptsMouse val="False"/>
          <AcceptsMouseTooltip val="False"/>
          <Persistent val="true" />
          <Frame type="UnitStatusShieldedHealthBar" name="HealthBar" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBar">
            <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/BaleogHealthBarBacking" pos="Min" offset="1" />
            <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/BaleogHealthBarBacking" pos="Min" offset="1" />
            <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/BaleogHealthBarBacking" pos="Max" offset="-1" />
            <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/BaleogHealthBarBacking" pos="Max" offset="-1" />
            <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/OlafHealthBarBacking" pos="Max" offset="-1" />
            <Expansion val="Up" />
          </Frame>
        </Frame>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame1" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/BaleogPanel/UnitStatusFrame0"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame2" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/BaleogPanel/UnitStatusFrame0"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame3" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/BaleogPanel/UnitStatusFrame0"/>
      </Frame>
      <Frame type="SelectionUnitStatusPanel" name="ErikPanel">
        <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <PlayerId val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
        <HeroesOnly val="False" />
        <AlwaysShowHero val="False" />
        <CheckPassengers val="True" />
        <SpecificUnit val="HeroErik"/>
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <RenderPriority val="514"/>
        <Visible val="{$parent/ErikHealthBarBacking/@Visible}"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame0">
          <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
          <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
          <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
          <AcceptsMouse val="False"/>
          <AcceptsMouseTooltip val="False"/>
          <Persistent val="true" />
          <Frame type="UnitStatusShieldedHealthBar" name="HealthBar" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/SelectionUnitStatusPanel/UnitStatusFrame0/HealthBar">
            <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/ErikHealthBarBacking" pos="Min" offset="1" />
            <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/ErikHealthBarBacking" pos="Min" offset="1" />
            <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/ErikHealthBarBacking" pos="Max" offset="-1" />
            <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/ErikHealthBarBacking" pos="Max" offset="-1" />
            <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/OlafHealthBarBacking" pos="Max" offset="-1" />
            <Expansion val="Up" />
          </Frame>
        </Frame>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame1" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/ErikPanel/UnitStatusFrame0"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame2" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/ErikPanel/UnitStatusFrame0"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame3" template="SpazzoCustomTopBar/PlayerCustomTalentTreeReferenceFrame/HeroSpecificOverrideTemplaterFrame/ErikPanel/UnitStatusFrame0"/>
      </Frame>
      <Frame type="SelectionUnitStatusPanel" name="MishaPanel">
        <Anchor side="Top" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent" pos="Max" offset="0"/>
        <PlayerId val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerHeroNameFrameTemplate/@PlayerId}" />
        <HeroesOnly val="False" />
        <AlwaysShowHero val="False" />
        <CheckPassengers val="True" />
        <SpecificUnit val="RexxarMisha"/>
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <Height val="200"/>
        <Width val="150"/>
        <AlwaysShowHero val="True" />
        <CheckPassengers val="True" />
        <!-- <AllowObserverLocalSelection val="True" /> -->
        <AcceptsMouse val="False"/>
        <AcceptsMouseTooltip val="False"/>
        <Height val="200"/>
        <Width val="150"/>
        <Visible val="False"/>
        <Frame type="UnitStatusFrame" name="UnitStatusFrame0">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
          <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
          <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
          <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
          <Width val="200" />
          <Height val="170" />
          <AcceptsMouse val="False"/>
          <AcceptsMouseTooltip val="False"/>
          <RenderPriority val="999"/>
          <Frame type="Frame" name="MishaHealth">
            <Anchor side="Top" relative="$parent" pos="Min" offset="53"/>
            <Anchor side="Bottom" relative="$parent" pos="Min" offset="83"/>
            <Anchor side="Left" relative="$parent" pos="Min" offset="50"/>
            <Anchor side="Right" relative="$parent" pos="Min" offset="120"/>
            <Frame type="UnitStatusMinimapIcon" name="UnitStatusContainedHeroIcon">
              <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
              <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
              <Anchor side="Right" relative="$parent" pos="Max" offset="-34"/>
              <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
              <ColorStyle val="Primary" />
              <AdditionalColorStyle val="PrimaryLight" index="0" />
              <Frame type="Image" name="IconImage">
                <Anchor relative="$parent" offset="-2" />
                <Texture val="{$parent/@MinimapIcon}" />
              </Frame>
              <Frame type="Image" name="BorderImage">
                <Anchor relative="$parent" offset="0" />
                <RenderPriority val="513" />
                <Texture val="Assets\Textures\storm_ui_hud_vehicle_unitstatus_medivac_green.dds" />
                <AdjustmentColor val="{$ancestor[@name=HeroSpecificOverrideTemplaterFrame]/$parent/PlayerColourFrame/@Color}" />
                <ColorAdjustMode val="Fill" />
                <!-- <ColorAdjustMode val="None" />
                <LightAdjustColor val="{$parent/@AdditionalColor[0]}" />
                <DarkAdjustColor val="{$parent/@Color[0]}" /> -->
              </Frame>
            </Frame>
            <Frame type="UnitStatusShieldedHealthLabel" name="ContainedHeroHealthPercentLabel" >
              <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
              <Anchor side="Left" relative="$parent" pos="Min" offset="26"/>
              <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
              <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
              <FractionDigits val="0"/>
              <RoundMode val="up"/>
              <HideMax val="true"/>
              <ShowPercent val="true"/>
              <ShowWhileInvulnerable val="true"/>
              <Frame type="Label" name="StatusLabel">
                <Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
                <Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
                <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
                <Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
                <RenderPriority val="999" />
                <Style val="Storm_VitalsLabel_Modified"/>
                <SnapToDevicePixels val="true"/>
              </Frame>
            </Frame>
          </Frame>
        </Frame>
      </Frame>
    </Frame>
    <Frame type="Frame" name="TalentNumberContainers">
      <Anchor relative="$parent" />
      <BatchImages val="True"/>
      <BatchText val="True" />
      <Batch val="True"/>
      <RenderPriority val="515"/>
      <StateGroup name="HeroicTier">
        <DefaultState val="T4"/>
        <State name="CompactT4">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer_heroic2.dds" />
        </State>
        <State name="CompactT2">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="2"/>
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer_heroic2.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
        </State>
        <State name="T4IntoBasicWide">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabelHeroic" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer_heroic2.dds" />
        </State>
        <State name="T2IntoBasicWide">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="Equal" SelectedValue="3"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabelHeroic" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer_heroic2.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
        </State>
        <State name="T4IntoBasic">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="1"/>
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer_heroic2.dds" />
        </State>
        <State name="T2IntoBasic">
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="1"/>
          <When type="StateGroup" frame="$TopBarSettingsFrame/LayoutPulldown1" operator="NotEqual" SelectedValue="4"/>
          <When type="Property" frame="$Talent4MasterSetting/HeroicIngress/CheckBoxButton" Toggled="True"/>
          <When type="Property" frame="$parent/PlayerHeroIconFrame/HeroIconImage" operator="NotEqual" texture="Assets\Textures\storm_ui_ingame_hero_leaderboard_lostvikings.dds"/>
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer_heroic2.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
        </State>
        <State name="T4">
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabelHeroic" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
        </State>
        <State name="T2">
          <When type="Property" frame="$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="2"/>
          <Action type="SetProperty" frame="$this/T2Label" Style="Spazzo_TopPanelTalentLabelHeroic" />
          <Action type="SetProperty" frame="$this/T2Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
          <Action type="SetProperty" frame="$this/T4Label" Style="Spazzo_TopPanelTalentLabel" />
          <Action type="SetProperty" frame="$this/T4Border/IconBorderImage" Texture="_Assets\UI\spaz_ui_talentborder_newer.dds" />
        </State>
      </StateGroup>
      <Frame type="Label" name="T1Label">
        <Anchor side="Top" relative="$parent/T1Border" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/T1Border" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/T1Border" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/T1Border" pos="Max" offset="0"/>
        <Text val="1"/>
        <Unclipped val="False"/>
        <Style val="Spazzo_TopPanelTalentLabel"/>
        <Color val="{$ancestor[@name=TalentNumberContainers]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="600"/>
        <StateGroup name="TalentSelectState">
          <DefaultState val="TierNotAvailable"/>
          <State name="OverrideFalse">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" operator="Equal" Visible="False"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Disabled">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T1AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierHidden">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" TextureState="TierHidden"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" TextureState="TierAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierNotAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" TextureState="TierNotAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierSelected">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1/IconImage" TextureState="TierSelected"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Frame" name="T1Border" template="SpazzoCustomTopBarQuests/TalentTreeBorderTemplate">
        <Anchor side="Top" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon1" pos="Max" offset="0"/>
        <Visible val="{$Talent1MasterSetting/ShowBorders/CheckBoxButton/@Toggled}"/>
      </Frame>
      <Frame type="Label" name="T2Label">
        <Anchor side="Top" relative="$parent/T2Border" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/T2Border" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/T2Border" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/T2Border" pos="Max" offset="0"/>
        <Text val="4"/>
        <Unclipped val="False"/>
        <Style val="Spazzo_TopPanelTalentLabel"/>
        <Color val="{$ancestor[@name=TalentNumberContainers]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="600"/>
        <StateGroup name="TalentSelectState">
          <DefaultState val="TierNotAvailable"/>
          <State name="OverrideFalse">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" operator="Equal" Visible="False"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="DisabledVarian">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Disabled">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierHidden">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" TextureState="TierHidden"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" TextureState="TierAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierNotAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" TextureState="TierNotAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierSelected">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2/IconImage" TextureState="TierSelected"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Frame" name="T2Border" template="SpazzoCustomTopBarQuests/TalentTreeBorderTemplate">
        <Anchor side="Top" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon2" pos="Max" offset="0"/>
        <Visible val="{$Talent2MasterSetting/ShowBorders/CheckBoxButton/@Toggled}"/>
      </Frame>
      <Frame type="Label" name="T3Label">
        <Anchor side="Top" relative="$parent/T3Border" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/T3Border" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/T3Border" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/T3Border" pos="Max" offset="0"/>
        <Text val="7"/>
        <Unclipped val="False"/>
        <Style val="Spazzo_TopPanelTalentLabel"/>
        <Color val="{$ancestor[@name=TalentNumberContainers]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="600"/>
        <StateGroup name="TalentSelectState">
          <DefaultState val="TierNotAvailable"/>
          <State name="OverrideFalse">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" operator="Equal" Visible="False"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="DisabledNotVarian">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="DisabledVarian">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T2AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierHidden">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" TextureState="TierHidden"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" TextureState="TierAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierNotAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" TextureState="TierNotAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierSelected">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3/IconImage" TextureState="TierSelected"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Frame" name="T3Border" template="SpazzoCustomTopBarQuests/TalentTreeBorderTemplate">
        <Anchor side="Top" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon3" pos="Max" offset="0"/>
        <Visible val="{$Talent3MasterSetting/ShowBorders/CheckBoxButton/@Toggled}"/>
      </Frame>
      <Frame type="Label" name="T4Label">
        <Anchor side="Top" relative="$parent/T4Border" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/T4Border" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/T4Border" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/T4Border" pos="Max" offset="0"/>
        <Text val="10"/>
        <Unclipped val="False"/>
        <Style val="Spazzo_TopPanelTalentLabelHeroic"/>
        <Color val="{$ancestor[@name=TalentNumberContainers]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="600"/>
        <StateGroup name="TalentSelectState">
          <DefaultState val="TierNotAvailable"/>
          <State name="OverrideFalse">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" operator="Equal" Visible="False"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Disabled">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame" operator="Equal" HeroicTier="4"/>
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroicAnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="DisabledVarian">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame" operator="NotEqual" HeroicTier="4"/>
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T3AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierHidden">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" TextureState="TierHidden"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" TextureState="TierAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierNotAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" TextureState="TierNotAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierSelected">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4/IconImage" TextureState="TierSelected"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Frame" name="T4Border" template="SpazzoCustomTopBarQuests/TalentTreeBorderTemplate">
        <Anchor side="Top" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon4" pos="Max" offset="0"/>
        <Visible val="{$Talent4MasterSetting/ShowBorders/CheckBoxButton/@Toggled}"/>
      </Frame>
      <Frame type="Label" name="T5Label">
        <Anchor side="Top" relative="$parent/T5Border" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/T5Border" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/T5Border" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/T5Border" pos="Max" offset="0"/>
        <Text val="13"/>
        <Unclipped val="False"/>
        <Style val="Spazzo_TopPanelTalentLabel"/>
        <Color val="{$ancestor[@name=TalentNumberContainers]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="600"/>
        <StateGroup name="TalentSelectState">
          <DefaultState val="TierNotAvailable"/>
          <State name="OverrideFalse">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" operator="Equal" Visible="False"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Disabled">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T5AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierHidden">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" TextureState="TierHidden"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" TextureState="TierAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierNotAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" TextureState="TierNotAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierSelected">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5/IconImage" TextureState="TierSelected"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Frame" name="T5Border" template="SpazzoCustomTopBarQuests/TalentTreeBorderTemplate">
        <Anchor side="Top" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon5" pos="Max" offset="0"/>
        <Visible val="{$Talent5MasterSetting/ShowBorders/CheckBoxButton/@Toggled}"/>
      </Frame>
      <Frame type="Label" name="T6Label">
        <Anchor side="Top" relative="$parent/T6Border" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/T6Border" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/T6Border" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/T6Border" pos="Max" offset="0"/>
        <Text val="16"/>
        <Unclipped val="False"/>
        <Style val="Spazzo_TopPanelTalentLabel"/>
        <Color val="{$ancestor[@name=TalentNumberContainers]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="600"/>
        <StateGroup name="TalentSelectState">
          <DefaultState val="TierNotAvailable"/>
          <State name="OverrideFalse">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" operator="Equal" Visible="False"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Disabled">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T6AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierHidden">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" TextureState="TierHidden"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" TextureState="TierAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierNotAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" TextureState="TierNotAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierSelected">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6/IconImage" TextureState="TierSelected"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Frame" name="T6Border" template="SpazzoCustomTopBarQuests/TalentTreeBorderTemplate">
        <Anchor side="Top" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon6" pos="Max" offset="0"/>
        <Visible val="{$Talent6MasterSetting/ShowBorders/CheckBoxButton/@Toggled}"/>
      </Frame>
      <Frame type="Label" name="T7Label">
        <Anchor side="Top" relative="$parent/T7Border" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$parent/T7Border" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$parent/T7Border" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$parent/T7Border" pos="Max" offset="0"/>
        <Text val="20"/>
        <Unclipped val="False"/>
        <Style val="Spazzo_TopPanelTalentLabel"/>
        <Color val="{/$ancestor[@name=TalentNumberContainers]/$parent/PlayerColourFrame/@Color}" />
        <RenderPriority val="600"/>
        <StateGroup name="TalentSelectState">
          <DefaultState val="TierNotAvailable"/>
          <State name="OverrideFalse">
            <When type="Property" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" operator="Equal" Visible="False"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="Disabled">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/T7AnchorFrame" operator="Equal" UseState="OutOfUse"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierHidden">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" TextureState="TierHidden"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
          <State name="TierAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" TextureState="TierAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierNotAvailable">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" TextureState="TierNotAvailable"/>
            <Action type="SetProperty" frame="$this" Visible="True" />
            <Action type="SetProperty" frame="$this" Alpha="255" />
          </State>
          <State name="TierSelected">
            <When type="StateGroup" frame="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7/IconImage" TextureState="TierSelected"/>
            <Action type="SetProperty" frame="$this" Visible="False" />
            <Action type="SetProperty" frame="$this" Alpha="0" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Frame" name="T7Border" template="SpazzoCustomTopBarQuests/TalentTreeBorderTemplate">
        <Anchor side="Top" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Min" offset="0"/>
        <Anchor side="Left" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Min" offset="0"/>
        <Anchor side="Right" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Max" offset="0"/>
        <Anchor side="Bottom" relative="$ancestor[@name=TalentNumberContainers]/$parent/HeroSelectedTalentTreeFrame/TalentTreeIcon7" pos="Max" offset="0"/>
        <Visible val="{$Talent7MasterSetting/ShowBorders/CheckBoxButton/@Toggled}"/>
      </Frame>
    </Frame>
    <StateGroup name="Animating">
      <DefaultState val="NotAnimating"/>
      <State name="NotAnimating">
      </State>
      <State name="Animating">
      </State>
    </StateGroup>
    <Animation name="InitiatePlayer">
      <Event event="OnShown" action="Play" frame="DummyAncestorRelationFrame/SelectionUnitStatusPanelTalentsFrame/UnitStatusFrame0" />
      <Controller type="Anchor" end="Pause" side="Top" relative="true">
        <Key type="Curve" time="0" value="0" inout="Smooth" />
        <Key type="Curve" time="0.55" value="117" inout="Smooth" />
        <Key type="Curve" time="0.6" value="117" inout="Smooth" />
        <Key type="Curve" time="0.625" value="115" inout="Smooth" />
      </Controller>
      <Controller type="Visibility" frame="HeroBG" end="Pause">
        <Key type="Bool" time="0" value="true" />
      </Controller>
      <Controller type="Fade" frame="HeroBG" end="Pause">
        <Key type="Curve" time="0" value="0" inout="Linear" />
        <Key type="Curve" time="0.55" value="0" inout="Linear" />
        <Key type="Curve" time="0.625" value="255" inout="Linear" />
        <!-- <Key type="Curve" time="0.625" value="255" inout="Linear" /> -->
      </Controller>
    </Animation>
  </Frame>

</Desc>
